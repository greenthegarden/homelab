---
- name: deploy-focalboard | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

####### FOCALBOARD SECTION

# https://www.focalboard.com/
# https://www.focalboard.com/download/personal-edition/docker/
# https://github.com/mattermost-community/focalboard

- name: deploy-focalboard | Set Focalboard facts
  ansible.builtin.set_fact:
    focalboard_image: "{{ focalboard_image | default('mattermost/focalboard:latest') }}"
    focalboard_image_tag: "{{ focalboard_image_tag | default('latest') }}"
    focalboard_service_name: "{{ focalboard_service_name | default('focalboard') }}"
    focalboard_service_port: "{{ focalboard_service_port | default(80) }}"
    focalboard_data_volume_name: "{{ focalboard_data_volume_name | default('data') }}"

- name: deploy-focalboard | Set Focalboard aggregated facts
  ansible.builtin.set_fact:
    focalboard_fqdn: "{{ focalboard_service_name }}.{{ ansible_hostname }}.{{ homelab.lan_domain | default('localdomain') }}"

- name: deploy-focalboard | Set Focalboard service facts
  ansible.builtin.set_fact:
    focalboard_networks:
      - name: "{{ web_network_name | default('web') }}"
    focalboard_ports:
      # Published ports to expose outside the container
      # host port:container port
      - "{{ focalboard_service_port }}:80"
    focalboard_volumes:
      # Local paths to mount into the container
      # local path:container path
      - "{{ focalboard_data_volume_name }}:/focalboard/data"
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

- name: deploy-focalboard | Create Focalboard container labels
  ansible.builtin.set_fact:
    focalboard_container_labels: "{{ focalboard_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # ---------------------------------------------------------------
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - {
      "key": "traefik.http.routers.{{ focalboard_service_name }}.entrypoints",
      "value": "websecure",
    }
    - {
      "key": "traefik.http.routers.{{ focalboard_service_name }}.rule",
      "value": "Host(`{{ focalboard_fqdn }}`)",
    }
    # - {
    #   "key": "traefik.http.routers.{{ focalboard_service_name }}.service",
    #   "value": "{{ focalboard_service_name }}",
    # }
    # - {
    #   "key": "traefik.http.routers.{{ focalboard_service_name }}.tls",
    #   "value": "true",
    # }
    # - {
    #   "key": "traefik.http.services.{{ focalboard_service_name }}.loadbalancer.server.port",
    #   "value": "{{ focalboard_service_port_api | quote }}",
    # }
    # ---------------------------------------------------------------
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/focalboard/focalboard/releases/tag/v${major}.${minor}.${patch}",
    }
    # ---------------------------------------------------------------
    # Homepage labels
    - { "key": "homepage.group", "value": "Applications" }
    - { "key": "homepage.name", "value": "Focalboard" }
    - { "key": "homepage.description", "value": "Open-source project management tool for teams" }
    - { "key": "homepage.icon", "value": "focalboard.png" }
    - { "key": "homepage.href", "value": "https://{{ focalboard_fqdn }}/" }
    - { "key": "homepage.siteMonitor", "value": "https://{{ focalboard_fqdn }}/" }

- name: deploy-focalboard | Create Focalboard volumes # noqa: syntax-check[unknown-module]
  community.docker.docker_volume:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ focalboard_data_volume_name }}"

- name: deploy-focalboard | Check if Focalboard is running
  community.docker.docker_container_info:
    name: "{{ focalboard_service_name }}"
  register: focalboard_state

- name: deploy-focalboard | Remove Focalboard container if changing version
  when:
    - focalboard_state.exists
    - (focalboard_image | split(':') | last) != (focalboard_state.container.Config.Image | split(':') | last)
  block:
    - name: deploy-focalboard | Stop and remove existing Focalboard container
      community.docker.docker_container:
        name: "{{ focalboard_service_name }}"
        state: absent

    - name: deploy-focalboard | Set update Focalboard
      ansible.builtin.set_fact:
        focalboard_update: true

- name: deploy-focalboard | Deploy Focalboard if not running
  when:
    - not focalboard_state.exists or (focalboard_update | default(false))
  block:
    - name: deploy-focalboard | Pull Focalboard image
      community.docker.docker_image:
        name: "{{ focalboard_image }}"
        source: pull

    - name: deploy-focalboard | Deploy Focalboard
      community.docker.docker_container:
        name: "{{ focalboard_service_name }}"
        image: "{{ focalboard_image }}"
        detach: true
        env:
          TZ: "{{ homelab.timezone | default('UTC') }}"
        labels: "{{ focalboard_container_labels | default(omit) }}"
        networks_cli_compatible: true
        networks: "{{ focalboard_networks }}"
        restart: true
        restart_policy: unless-stopped
        state: started
        volumes: "{{ focalboard_volumes }}"
      register: focalboard_container_state

    - name: deploy-focalboard | Wait for Focalboard to accept connections
      ansible.builtin.wait_for:
        host: "{{ focalboard_fqdn }}"
        port: 80
        connect_timeout: 1
        delay: 10
        state: started
        timeout: 30
      register: focalboard_running
      until: focalboard_running is success
      retries: 10
