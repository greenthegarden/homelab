---
- name: deploy-it_tools | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

####### IT-TOOLS SECTION

# https://github.com/CorentinTh/it-tools

- name: deploy-it_tools | Set IT-Tools facts
  ansible.builtin.set_fact:
    it_tools_image: "{{ it_tools_image | default('corentinth/it-tools:latest') }}"
    it_tools_service_name: "{{ it_tools_service_name | default('it-tools') }}"
    it_tools_service_port: "{{ it_tools_service_port | default(80) }}"

- name: deploy-it_tools | Set IT-Tools volume facts
  ansible.builtin.set_fact:
    it_tools_volume_name: "{{ it_tools_volume_name | default(it_tools_service_name) }}"

- name: deploy-it_tools | Set IT-Tools aggregated facts
  ansible.builtin.set_fact:
    it_tools_fqdn: "{{ it_tools_service_name }}.{{ ansible_hostname }}.{{ homelab.certificate_domain | default('localdomain') }}"

- name: deploy-it_tools | Set IT-Tools service facts
  ansible.builtin.set_fact:
    it_tools_networks:
      # Reverse Proxy  network is used to expose applications via Traefik
      - { name: "{{ reverse_proxy_network_name | default('reverse-proxy') }}" }
    it_tools_volumes: []
      # Local paths to mount into the container
      # local path:container path

- name: deploy-it_tools | Log IT-Tools configuration
  ansible.builtin.debug:
    msg:
      - "IT-Tools image: {{ it_tools_image }}"
      - "IT-Tools service name: {{ it_tools_service_name }}"
      - "IT-Tools FQDN: {{ it_tools_fqdn }}"
      - "IT-Tools networks: {{ it_tools_networks | default(omit) }}"
      - "IT-Tools ports: {{ it_tools_ports | default(omit) }}"
      - "IT-Tools volumes: {{ it_tools_volumes | default(omit) }}"

- name: deploy-it_tools | Create IT-Tools container labels
  ansible.builtin.set_fact:
    it_tools_container_labels: "{{ it_tools_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # ---------------------------------------------------------------
    # Homepage labels
    - { "key": "homepage.group", "value": "Applications" }
    - { "key": "homepage.name", "value": "IT-Tools" }
    - {
      "key": "homepage.description",
      "value": "Useful tools for developer and people working in IT",
    }
    - { "key": "homepage.icon", "value": "it-tools.png" }
    - { "key": "homepage.href", "value": "https://{{ it_tools_fqdn }}/" }
    - { "key": "homepage.siteMonitor", "value": "https://{{ it_tools_fqdn }}/" }
    # ---------------------------------------------------------------
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - {
      "key": "traefik.http.routers.{{ it_tools_service_name }}.entrypoints",
      "value": "websecure",
    }
    - {
      "key": "traefik.http.routers.{{ it_tools_service_name }}.rule",
      "value": "Host(`{{ it_tools_fqdn }}`)",
    }
    # ---------------------------------------------------------------
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/CorentinTh/it-tools/releases/tag/v${major}.${minor}.${patch}",
    }

- name: deploy-it_tools | Create IT-Tools networks # noqa: syntax-check[unknown-module]
  when: it_tools_networks is defined
  community.docker.docker_network:
    name: "{{ item.name }}"
    driver: "{{ item.driver | default('bridge') }}"
    internal: "{{ item.internal | default(false) }}"
    state: present
  loop: "{{ it_tools_networks }}"

- name: deploy-it_tools | Create IT-Tools volume # noqa: syntax-check[unknown-module]
  when: it_tools_volume_name is defined and (it_tools_volumes | length > 0)
  community.docker.docker_volume:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ it_tools_volume_name }}"

- name: deploy-it_tools | Pull IT-Tools image
  community.docker.docker_image:
    name: "{{ it_tools_image }}"
    source: pull

# docker run -d --name it-tools --restart unless-stopped -p 8080:80 corentinth/it-tools:latest
- name: deploy-it_tools | Deploy IT-Tools
  community.docker.docker_container:
    name: "{{ it_tools_service_name }}"
    image: "{{ it_tools_image }}"
    detach: true
    labels: "{{ it_tools_container_labels | default(omit) }}"
    networks_cli_compatible: true
    networks: "{{ it_tools_networks | ansible.utils.remove_keys(target=['internal']) | default(omit) }}"
    restart: true
    restart_policy: unless-stopped
    state: started
    volumes: "{{ default_host_volumes + it_tools_volumes | default(omit) }}"
  register: it_tools_container_state

- name: deploy-it_tools | Wait for IT-Tools to accept connections
  ansible.builtin.wait_for:
    host: "{{ it_tools_fqdn }}"
    port: 80
    connect_timeout: 1
    delay: 10
    state: started
    timeout: 30
  register: it_tools_running
  retries: 10
  until: it_tools_running is success
