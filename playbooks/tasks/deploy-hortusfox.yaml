---
- name: deploy-hortusfox | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

####### HORTUSFOX SECTION

# https://hortusfox.com/blog/2020/04/15/loki-quick-tip-how-to-use-a-loki-datasource-in-your-hortusfox-dashboard/

- name: deploy-hortusfox | Set Hortusfox facts
  ansible.builtin.set_fact:
    hortusfox_image: "{{ hortusfox_image | default('ghcr.io/danielbrendel/hortusfox-web:latest') }}"
    hortusfox_service_name: "{{ hortusfox_service_name | default('hortusfox') }}"
    hortusfox_service_port: "{{ hortusfox_service_port | default(80) }}"
    hortusfox_db_backup_volume_name: "{{ hortusfox_db_backup_volume_name | default('hortusfox_db_backup') }}"

- name: deploy-hortusfox | Set Hortusfox network facts
  ansible.builtin.set_fact:
    hortusfox_network_name: "{{ hortusfox_network_name | default(hortusfox_service_name) }}"

- name: deploy-hortusfox | Set Hortusfox volume facts
  ansible.builtin.set_fact:
    hortusfox_volume_name: "{{ hortusfox_volume_name | default(hortusfox_service_name) }}"
    hortusfox_config_dir: /root/hortusfox

- name: deploy-hortusfox | Set Hortusfox aggregated facts
  ansible.builtin.set_fact:
    hortusfox_fqdn: "{{ hortusfox_service_name }}.{{ ansible_hostname }}.{{ homelab.certificate_domain | default('localdomain') }}"

- name: deploy-hortusfox | Set Hortusfox service facts
  ansible.builtin.set_fact:
    hortusfox_networks:
      - { name: "{{ web_network_name | default('web') }}", internal: true }
      - { name: "{{ web_network_name | default('web') }}" }
    hortusfox_ports:
      # Published ports to expose outside the container
      # host port:container port
      - "{{ hortusfox_service_port }}:80"
    hortusfox_volumes:
      # Local paths to mount into the container
      # local path:container path
      - "{{ hortusfox_config_dir }}/config:/app/config"

- name: deploy-hortusfox | Log Hortusfox configuration
  ansible.builtin.debug:
    msg:
      - "Hortusfox image: {{ hortusfox_image }}"
      - "Hortusfox service name: {{ hortusfox_service_name }}"
      - "Hortusfox FQDN: {{ hortusfox_fqdn }}"
      - "Hortusfox networks: {{ hortusfox_networks | default(omit) }}"
      - "Hortusfox ports: {{ hortusfox_ports | default(omit) }}"
      - "Hortusfox volumes: {{ hortusfox_volumes | default(omit) }}"

- name: deploy-hortusfox | Create Hortusfox container labels
  ansible.builtin.set_fact:
    hortusfox_container_labels: "{{ hortusfox_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # ---------------------------------------------------------------
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - {
      "key": "traefik.http.routers.{{ hortusfox_service_name }}.entrypoints",
      "value": "websecure",
    }
    - {
      "key": "traefik.http.routers.{{ hortusfox_service_name }}.rule",
      "value": "Host(`{{ hortusfox_fqdn }}`)",
    }
    # ---------------------------------------------------------------
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/danielbrendel/hortusfox-web/releases/tag/v${major}.${minor}.${patch}",
    }
    # ---------------------------------------------------------------
    # Homepage labels
    - { "key": "homepage.group", "value": "Applications" }
    - { "key": "homepage.name", "value": "HortusFox" }
    - {
      "key": "homepage.description",
      "value": "A self-hosted collaborative plant management system",
    }
    - { "key": "homepage.icon", "value": "hortusfox.png" }
    - { "key": "homepage.href", "value": "https://{{ hortusfox_fqdn }}/" }
    - {
      "key": "homepage.siteMonitor",
      "value": "https://{{ hortusfox_fqdn }}/",
    }

- name: deploy-hortusfox | Create Hortusfox DB container labels
  ansible.builtin.set_fact:
    hortusfox_db_container_labels: "{{ hortusfox_db_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # Docker Volume Backup labels
    - {
      "key": "docker-volume-backup.archive-pre",
      "value":
        "/bin/sh -c 'mariadb-dump --single-transaction --user={{ hortusfox.db_user }}
        -p{{ hortusfox.db_password }} --all-databases > /tmp/dumps/dump.sql'",
    }

- name: deploy-hortusfox | Create Hortusfox configuration directory
  ansible.builtin.file:
    path: "{{ hortusfox_config_dir }}"
    state: directory
    mode: "0644"

- name: deploy-hortusfox | Create Hortusfox configuration
  ansible.builtin.template:
    src: templates/hortusfox/docker-compose.yml.j2
    dest: "{{ hortusfox_config_dir }}/docker-compose.yml"
    mode: "0644"

- name: deploy-hortusfox | Create Hortusfox backup volume # noqa: syntax-check[unknown-module]
  community.docker.docker_volume:
    name: "{{ hortusfox_db_backup_volume_name }}"
    state: present

# - name: deploy-hortusfox | Tear down existing services
#   community.docker.docker_compose_v2:
#     project_src: /root/hortusfox
#     state: absent

- name: deploy-hortusfox | Deploy Hortusfox services # noqa: syntax-check[unknown-module]
  community.docker.docker_compose_v2:
    project_src: "{{ hortusfox_config_dir }}"
  register: output
