---

- name: Get host Docker status
  community.docker.docker_host_info:
  register: host_docker_info
  ignore_errors: true

- name: Ensure Docker is available on host
  ansible.builtin.assert:
    that:
      - host_docker_info.host_info.ServerVersion is version('25.0', '>=')
    fail_msg: A version of Docker >= 20 is required to be installed

####### fireflyiii SECTION

# https://fireflyiii.com/blog/2020/04/15/loki-quick-tip-how-to-use-a-loki-datasource-in-your-fireflyiii-dashboard/

- name: Set Firefly III facts
  ansible.builtin.set_fact:
    fireflyiii_image_name: "{{ fireflyiii_image_name | default('fireflyiii/core') }}"
    fireflyiii_image_tag: "{{ fireflyiii_image_tag | default('latest') }}"
    fireflyiii_service_name: "{{ fireflyiii_service_name | default('fireflyiii') }}"
    fireflyiii_service_port: "{{ fireflyiii_service_port | default(8090) }}"
    fireflyiii_db_backup_volume_name: "{{ fireflyiii_db_backup_volume_name | default('fireflyiii_db_backup') }}"
    fireflyiii_config_dir: /root/fireflyiii

- name: Set Firefly III aggregated facts
  ansible.builtin.set_fact:
    fireflyiii_image: "{{ fireflyiii_image_name }}:{{ fireflyiii_image_tag }}"
    fireflyiii_fqdn: "{{ fireflyiii_service_name }}.{{ ansible_hostname }}.{{ homelab.lan_domain | default('localdomain') }}"

- name: Set Firefly III service facts
  ansible.builtin.set_fact:
    fireflyiii_networks:
      - name: "{{ web_network_name | default('web') }}"
    fireflyiii_ports:
      - "{{ fireflyiii_service_port }}:8080"
    fireflyiii_volumes:
      - "/root/fireflyiii/config:/app/config"
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

- name: Create Firefly III container labels
  ansible.builtin.set_fact:
    fireflyiii_container_labels: "{{ fireflyiii_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - { "key": "traefik.docker.network", "value": "{{ web_network_name }}" }
    - {
      "key": "traefik.http.routers.{{ fireflyiii_service_name }}.entrypoints",
      "value": "websecure",
    }
    - {
      "key": "traefik.http.routers.{{ fireflyiii_service_name }}.rule",
      "value": "Host(`{{ fireflyiii_fqdn }}`)",
    }
    - {
      "key": "traefik.http.routers.{{ fireflyiii_service_name }}.service",
      "value": "{{ fireflyiii_service_name }}",
    }
    - {
      "key": "traefik.http.routers.{{ fireflyiii_service_name }}.tls",
      "value": "true",
    }
    - {
      "key": "traefik.http.services.{{ fireflyiii_service_name }}.loadbalancer.server.port",
      "value": "8080",
    }
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/getfireflyiii/fireflyiii/releases/tag/v$${major}.$${minor}.$${patch}",
    }
    # Docker Volume Back labels
    - { "key": "docker-volume-backup.stop-during-backup", "value": "true" }
    # Homepage labels
    - { "key": "homepage.group", "value": "Applications" }
    - { "key": "homepage.name", "value": "Firefly III" }
    - {
      "key": "homepage.description",
      "value": "Personal finances manager",
    }
    - { "key": "homepage.icon", "value": "firefly-iii.png" }
    - { "key": "homepage.href", "value": "https://{{ fireflyiii_fqdn }}/" }
    - {
      "key": "homepage.siteMonitor",
      "value": "https://{{ fireflyiii_fqdn }}/",
    }

- name: Create Firefly III DB container labels
  ansible.builtin.set_fact:
    fireflyiii_db_container_labels: "{{ fireflyiii_db_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # Docker Volume Backup labels
    - {
      "key": "docker-volume-backup.archive-pre",
      "value": "/bin/sh -c 'mariadb-dump --single-transaction
      --user={{ fireflyiii.db_user }}
      -p{{ fireflyiii.db_password }} --all-databases > /tmp/dumps/dump.sql'"
    }

- name: Create Firefly III configuration directory
  ansible.builtin.file:
    path: "{{ fireflyiii_config_dir }}"
    state: directory
    mode: "0644"

- name: Create Firefly III configuration
  ansible.builtin.template:
    src: "templates/fireflyiii/{{ item }}.j2"
    dest: "{{ fireflyiii_config_dir }}/{{ item }}"
    mode: "0644"
  loop:
    - docker-compose.yml
    - fireflyiii.env
    - fireflyiii_importer.env

- name: Create Firefly III backup volume  # noqa: syntax-check[unknown-module]
  community.docker.docker_volume:
    name: "{{ fireflyiii_db_backup_volume_name }}"
    state: present

# - name: Tear down existing services
#   community.docker.docker_compose_v2:
#     project_src: /root/fireflyiii
#     state: absent

- name: Deploy Firefly III services  # noqa: syntax-check[unknown-module]
  community.docker.docker_compose_v2:
    project_src: "{{ fireflyiii_config_dir }}"
    env_files:
      - fireflyiii.env
      - fireflyiii_importer.env
  register: output
