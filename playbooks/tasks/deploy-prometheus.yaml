---

- name: Get host Docker status
  community.docker.docker_host_info:
  register: host_docker_info
  ignore_errors: true

- name: Ensure Docker is available on host
  ansible.builtin.assert:
    that:
      - host_docker_info.host_info.ServerVersion is version('25.0', '>=')
    fail_msg: A version of Docker >= 20 is required to be installed

# https://hub.docker.com/r/prom/prometheus
# https://medium.com/platform-engineering/monitoring-traefik-with-grafana-1d037af5b952

- name: Set Prometheus facts
  ansible.builtin.set_fact:
    prometheus_image_name: "{{ prometheus_image_name | default('prom/prometheus') }}"
    prometheus_image_tag: "{{ prometheus_image_tag | default('latest') }}"
    prometheus_service_name: "{{ prometheus_service_name | default('prometheus') }}"
    prometheus_service_port: "{{ prometheus_service_port | default(9090) }}"
    prometheus_volume_name: "{{ prometheus_volume_name | default('prometheus') }}"

- name: Set Prometheus aggregated facts
  ansible.builtin.set_fact:
    prometheus_image: "{{ prometheus_image_name }}:{{ prometheus_image_tag }}"
    prometheus_fqdn: "{{ prometheus_service_name }}.{{ ansible_hostname }}.{{ homelab.lan_domain | default('localdomain') }}"

- name: Set Prometheus service facts
  ansible.builtin.set_fact:
    prometheus_command:
      - --config.file=/etc/prometheus/prometheus.yml
      # runs Prometheus in agent mode. The agent mode is limited to discovery, scrape and remote write.
      # https://prometheus.io/docs/prometheus/latest/feature_flags/
      # - --enable-feature=agent
      # FIXME: federation did not appear to work for an agent
      # controls HTTP reloads and shutdowns of Prometheus. Disabled by default
      # https://prometheus.io/docs/operating/security/
      # - --web.enable-lifecycle
      # no longer required as using a configuration file
    prometheus_networks:
      - name: "{{ monitoring_network_name | default('monitoring') }}"
      - name: "{{ web_network_name | default('web') }}"
    prometheus_ports:
      - "{{ prometheus_service_port | default(9090) }}:9090"
    prometheus_volumes:
      - /root/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - "{{ prometheus_volume_name }}:/prometheus"
      - /etc/localtime:/etc/localtime:ro

- name: Create Prometheus container labels
  ansible.builtin.set_fact:
    prometheus_container_labels: "{{ prometheus_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # Traefik labels
    - {
      "key": "traefik.enable",
      "value": "true"
    }
    - {
      "key": "traefik.docker.network",
      "value": "{{ web_network_name }}"
    }
    - {
      "key": "traefik.http.routers.{{ prometheus_service_name }}-http.rule",
      "value": "Host(`{{ prometheus_fqdn }}`)",
    }
    - {
      "key": "traefik.http.routers.{{ prometheus_service_name }}-http.entrypoints",
      "value": "websecure",
    }
    - {
      "key": "traefik.http.routers.{{ prometheus_service_name }}-http.service",
      "value": "{{ prometheus_service_name }}",
    }
    - {
      "key": "traefik.http.routers.{{ prometheus_service_name }}-http.tls",
      "value": "true",
    }
    # What's up Docker? labels
    - {
      "key": "wud.tag.include",
      "value": '^\d+\.\d+\.\d+$$'
    }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/prometheus/prometheus/releases/tag/v$${major}.$${minor}.$${patch}",
    }

- name: Create Prometheus configuration directory
  ansible.builtin.file:
    path: /root/prometheus
    mode: "644"
    state: directory
  register: prometheus_configuration_creation

- name: Create Prometheus configuration file
  ansible.builtin.template:
    src: templates/prometheus/prometheus.yml.j2
    dest: /root/prometheus/prometheus.yml
    mode: "644"
  register: prometheus_configuration_creation

- name: Check if Prometheus is running  # noqa: syntax-check[unknown-module]
  community.docker.docker_container_info:
    name: "{{ prometheus_service_name }}"
  register: prometheus_state

- name: Remove Prometheus container if changing version
  when:
    - prometheus_state.exists
    - prometheus_image_tag != prometheus_state.container.Config.Image | split(':') | last
  block:
    - name: Stop and remove existing Prometheus container
      community.docker.docker_container:
        name: "{{ prometheus_service_name }}"
        state: absent

    - name: Set update Prometheus
      ansible.builtin.set_fact:
        prometheus_update: true

- name: Deploy Prometheus if not running
  when: not prometheus_state.exists or (prometheus_update | default(false))
  block:
    - name: Pull Prometheus image
      community.docker.docker_image:
        name: "{{ prometheus_image_name }}:{{ prometheus_image_tag | default('latest') }}"
        source: pull

    - name: Deploy Prometheus
      community.docker.docker_container:
        name: "{{ prometheus_service_name | default('prometheus') }}"
        image: "{{ prometheus_image }}"
        command: "{{ prometheus_command }}"
        detach: true
        labels: "{{ prometheus_container_labels }}"
        memory: 300M
        memory_reservation: 100M
        networks_cli_compatible: true
        networks: "{{ prometheus_networks }}"
        restart: true
        restart_policy: unless-stopped
        state: started
        volumes: "{{ prometheus_volumes }}"
      register: prometheus_container_state

    # - name: Wait for Prometheus to accept connections
    #   ansible.builtin.wait_for:
    #     host: "{{ prometheus_fqdn }}"
    #     port: 80
    #     connect_timeout: 1
    #     delay: 10
    #     state: started
    #     timeout: 30
    #   register: prometheus_running
    #   until: prometheus_running is success
    #   retries: 10
# - name: Create Prometheus configuration file
#   ansible.builtin.template:
#     src: templates/prometheus/prometheus-min.yml.j2
#     dest: /tmp/prometheus.yml
#     mode: "644"
#   register: prometheus_configuration_creation
#   tags:
#     - prometheus

# - name: Load Prometheus configuration if changed
#   tags:
#     - prometheus
#   when: prometheus_configuration_creation.changed or (prometheus_running is defined and prometheus_running is success)
#   block:
#     - name: Copy configuration file into Prometheus container
#       ansible.builtin.command: docker cp /tmp/prometheus.yml {{ prometheus_service_name }}:/etc/prometheus/prometheus.yml
#       when: prometheus_configuration_creation.changed or (prometheus_running is defined and prometheus_running is success)

#     #   # curl -X POST :9090/-/reload
#     # - name: Restart Prometheus via curl
#     #   ansible.builtin.uri:
#     #     url: "https://{{ prometheus_fqdn }}/-/reload"
#     #     method: POST
#     #     validate_certs: false
