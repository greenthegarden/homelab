---
- name: deploy-node-exporter | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

- name: deploy-node-exporter | Set Node Exporter facts
  ansible.builtin.set_fact:
    node_exporter_image: "{{ node_exporter_image | default('prom/node-exporter:latest') }}"
    node_exporter_service_name: "{{ node_exporter_service_name | default('node-exporter') }}"
    node_exporter_service_port: "{{ node_exporter_service_port | default(9100) }}"
    node_exporter_service_protocol: "{{ node_exporter_service_protocol | default('http') }}"

- name: deploy-node-exporter | Set Node Exporter aggregated facts
  ansible.builtin.set_fact:
    node_exporter_fqdn: "{{ node_exporter_service_name }}.{{ ansible_hostname }}.{{ homelab.lan_domain | default('localdomain') }}"

- name: deploy-node-exporter | Set Node Exporter service facts
  ansible.builtin.set_fact:
    node_exporter_networks:
      - name: "{{ monitoring_network_name | default('monitoring') }}"
      - name: "{{ web_network_name | default('web') }}"
    node_exporter_ports:
      - "{{ node_exporter_service_port | default(9100) }}:9100"
    node_exporter_volumes:
      - /proc:/host/proc:ro
      - /sys/:/host/sys:ro
      - /:/rootfs:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

- name: deploy-node-exporter | Create Node Exporter container labels
  ansible.builtin.set_fact:
    node_exporter_container_labels: "{{ node_exporter_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - { "key": "traefik.docker.network", "value": "{{ web_network_name }}" }
    - {
      "key": "traefik.http.routers.{{ node_exporter_service_name }}-http.rule",
      "value": "Host(`{{ node_exporter_fqdn }}`)",
    }
    - {
      "key": "traefik.http.routers.{{ node_exporter_service_name }}-http.entrypoints",
      "value": "websecure",
    }
    - {
      "key": "traefik.http.routers.{{ node_exporter_service_name }}-http.service",
      "value": "{{ node_exporter_service_name }}",
    }
    - {
      "key": "traefik.http.routers.{{ node_exporter_service_name }}-http.tls",
      "value": "true",
    }
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/prometheus/node_exporter/releases/tag/v${major}.${minor}.${patch}",
    }

- name: deploy-node-exporter | Pull Node Exporter image
  community.docker.docker_image:
    name: "{{ node_exporter_image }}"
    source: pull

- name: deploy-node-exporter | Deploy Node Exporter
  community.docker.docker_container:
    name: "{{ node_exporter_service_name }}"
    image: "{{ node_exporter_image }}"
    detach: true
    labels: "{{ node_exporter_container_labels }}"
    networks_cli_compatible: true
    networks: "{{ node_exporter_networks }}"
    recreate: true
    restart: true
    restart_policy: unless-stopped
    state: started
    volumes: "{{ node_exporter_volumes }}"
  register: node_exporter_container_state
# - name: deploy-node-exporter | Wait for Node Exporter to accept connections
#   ansible.builtin.wait_for:
#     host: "{{ node_exporter_fqdn }}"
#     port: 80
#     connect_timeout: 1
#     delay: 10
#     state: started
#     timeout: 30
#   register: node_exporter_running
#   until: node_exporter_running is success
#   retries: 10
