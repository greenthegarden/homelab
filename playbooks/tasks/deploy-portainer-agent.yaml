---

- name: Get host Docker status
  community.docker.docker_host_info:
  register: host_docker_info
  ignore_errors: true

- name: Ensure Docker is available on host
  ansible.builtin.assert:
    that:
      - host_docker_info.host_info.ServerVersion is version('25.0', '>=')
    fail_msg: A version of Docker >= 20 is required to be installed

- name: Set Portainer Agent facts
  ansible.builtin.set_fact:
    portainer_agent_image: "{{ portainer_agent_image | default('portainer/agent:latest') }}"
    portainer_agent_service_name: "{{ portainer_agent_service_name | default('portainer_agent') }}"
    portainer_agent_service_port: "{{ portainer_agent_service_port | default(9001) }}"

- name: Set Portainer Agent service facts
  ansible.builtin.set_fact:
    portainer_agent_ports:
      - "{{ portainer_agent_service_port }}:9001"
    portainer_agent_volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes

- name: Create Portainer Agent container labels
  ansible.builtin.set_fact:
    portainer_agent_container_labels: "{{ portainer_agent_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # What's up Docker? labels
    - {
      "key": "wud.tag.include",
      "value": '^\d+\.\d+\.\d+-alpine+$$'
    }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/portainer/agent/releases/tag/$${major}.$${minor}.$${patch}",
    }

- name: Pull Portainer Agent image
  community.docker.docker_image:
    name: "{{ portainer_agent_image }}"
    source: pull

# docker run -d \
#   -p 9001:9001 \
#   --name portainer_agent \
#   --restart=always \
#   -v /var/run/docker.sock:/var/run/docker.sock \
#   -v /var/lib/docker/volumes:/var/lib/docker/volumes \
#   portainer/agent:2.18.3

- name: Deploy Portainer Agent
  community.docker.docker_container:
    name: "{{ portainer_agent_service_name }}"
    image: "{{ portainer_agent_image }}"
    detach: true
    labels: "{{ portainer_agent_container_labels }}"
    published_ports: "{{ portainer_agent_ports }}"
    restart: true
    restart_policy: unless-stopped
    state: started
    volumes: "{{ portainer_agent_volumes }}"
  register: portainer_agent_container_state

# - name: Wait for Portainer Agent to accept connections
#   ansible.builtin.wait_for:
#     host: "{{ portainer_agent_fqdn }}"
#     port: "{{ portainer_agent_service_port }}"
#     connect_timeout: 1
#     delay: 10
#     state: started
#     timeout: 30
#   register: portainer_agent_running
#   retries: 10
#   until: portainer_agent_running is success
