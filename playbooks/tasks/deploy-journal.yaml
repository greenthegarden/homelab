---
- name: deploy-journal | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

####### Journal SECTION

# https://docs.plant-it.org/0.9.0/server-installation/#quickstart

- name: deploy-journal | Set Journal facts
  ansible.builtin.set_fact:
    journal_image: "{{ journal_image | default('journal:latest') }}"
    journal_service_name: "{{ journal_service_name | default('journal') }}"
    journal_service_port: "{{ journal_service_port_ui | default(3000) }}"
    journal_db_backup_volume_name: "{{ journal_db_backup_volume_name | default('journal_db_backup') }}"
    journal_config_dir: /root/journal

- name: deploy-journal | Set Journal aggregated facts
  ansible.builtin.set_fact:
    journal_fqdn: "{{ journal_service_name }}.{{ ansible_hostname }}.{{ homelab.lan_domain | default('localdomain') }}"

- name: deploy-journal | Set Journal service facts
  ansible.builtin.set_fact:
    journal_networks:
      - name: "{{ web_network_name | default('web') }}"
    journal_ports:
      - "{{ journal_service_port }}:3000"
    journal_volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

- name: deploy-journal | Create Journal container labels
  ansible.builtin.set_fact:
    journal_container_labels: "{{ journal_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # Traefik labels - app
    - { "key": "traefik.enable", "value": "true" }
    - { "key": "traefik.docker.network", "value": "{{ web_network_name }}" }
    - {
      "key": "traefik.http.routers.{{ journal_service_name }}.entrypoints",
      "value": "websecure",
    }
    - {
      "key": "traefik.http.routers.{{ journal_service_name }}.rule",
      "value": "Host(`{{ journal_fqdn }}`)",
    }
    - {
      "key": "traefik.http.routers.{{ journal_service_name }}.service",
      "value": "{{ journal_service_name }}",
    }
    - {
      "key": "traefik.http.routers.{{ journal_service_name }}.tls",
      "value": "true",
    }
    - {
      "key": "traefik.http.services.{{ journal_service_name }}.loadbalancer.server.port",
      "value": "{{ journal_service_port | quote }}",
    }
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/MDeLuise/plant-it/releases/tag/v${major}.${minor}.${patch}",
    }
    # Homepage labels
    - { "key": "homepage.group", "value": "Applications" }
    - { "key": "homepage.name", "value": "Journal" }
    - {
      "key": "homepage.description",
      "value": "A private self-hosted journal with sharing capabilities",
    }
    - { "key": "homepage.icon", "value": "journal.png" }
    - { "key": "homepage.href", "value": "https://{{ journal_fqdn }}" }
    - { "key": "homepage.siteMonitor", "value": "https://{{ journal_fqdn }}" }

# - name: deploy-journal | Create Journal DB container labels
#   ansible.builtin.set_fact:
#     journal_db_container_labels: "{{ journal_db_container_labels | default({}) | combine({item.key: item.value}) }}"
#   with_items:
#     # Docker Volume Backup labels
#     - {
#       "key": "docker-volume-backup.archive-pre",
#       "value": "/bin/sh -c 'mariadb-dump --single-transaction --user={{ plant_it.db_user }}
#       -p{{ plant_it.db_password }} --all-databases > /tmp/dumps/dump.sql'"
#     }

- name: deploy-journal | Create Journal configuration directory
  ansible.builtin.file:
    path: "{{ journal_config_dir }}"
    state: directory
    mode: "0644"

- name: deploy-journal | Create Journal configuration
  ansible.builtin.template:
    src: "templates/journal/{{ item }}.j2"
    dest: "{{ journal_config_dir }}/{{ item }}"
    mode: "0644"
  loop:
    - docker-compose.yml

- name: deploy-journal | Create Journal backup volume # noqa: syntax-check[unknown-module]
  community.docker.docker_volume:
    name: "{{ journal_db_backup_volume_name }}"
    state: present

# - name: deploy-journal | Tear down existing services
#   community.docker.docker_compose_v2:
#     project_src: /root/Journal
#     state: absent

- name: deploy-journal | Deploy Journal services # noqa: syntax-check[unknown-module]
  community.docker.docker_compose_v2:
    project_src: "{{ journal_config_dir }}"
  register: output
