---

- name: deploy-searxng | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

####### SEARXNG SECTION

- name: deploy-searxng | Set SearXNG facts
  ansible.builtin.set_fact:
    searxng_image: "{{ searxng_image | default('searxng/searxng:latest') }}"
    searxng_service_name: "{{ searxng_service_name | default('searxng') }}"
    searxng_service_port: "{{ searxng_service_port | default(8080) }}"

- name: deploy-searxng | Set SearXNG volume facts
  ansible.builtin.set_fact:
    searxng_volume_name: "{{ searxng_volume_name | default(searxng_service_name) }}"

- name: deploy-searxng | Set SearXNG aggregated facts
  ansible.builtin.set_fact:
    searxng_fqdn: "{{ searxng_service_name }}.{{ ansible_hostname }}.{{ homelab.certificate_domain | default('localdomain') }}"

- name: deploy-searxng | Set SearXNG service facts
  ansible.builtin.set_fact:
    searxng_networks:
      - name: "{{ web_network_name | default('web') }}"
    searxng_ports:
      # Published ports to expose outside the container
      # host port:container port
      - "{{ searxng_service_port }}:8080"
    searxng_volumes:
      # Local paths to mount into the container
      # local path:container path
      - "{{ searxng_volume_name }}:/etc/searxng"

- name: deploy-searxng | Log Searxng configuration
  ansible.builtin.debug:
    msg:
      - "Searxng image: {{ searxng_image }}"
      - "Searxng service name: {{ searxng_service_name }}"
      - "Searxng FQDN: {{ searxng_fqdn }}"
      - "Searxng networks: {{ searxng_networks | default(omit) }}"
      - "Searxng ports: {{ searxng_ports | default(omit) }}"
      - "Searxng volumes: {{ searxng_volumes | default(omit) }}"

- name: deploy-searxng | Create SearXNG container labels
  ansible.builtin.set_fact:
    searxng_container_labels: "{{ searxng_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # ---------------------------------------------------------------
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - {
      "key": "traefik.http.routers.{{ searxng_service_name }}.entrypoints",
      "value": "websecure",
    }
    - {
      "key": "traefik.http.routers.{{ searxng_service_name }}.rule",
      "value": "Host(`{{ searxng_fqdn }}`)",
    }
    # ---------------------------------------------------------------
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/searxng/searxng/releases/tag/v${major}.${minor}.${patch}",
    }
    # ---------------------------------------------------------------
    # Docker Volume Backup labels
    - { "key": "docker-volume-backup.stop-during-backup", "value": "true" }
    # ---------------------------------------------------------------
    # Homepage labels
    - { "key": "homepage.group", "value": "Applications" }
    - { "key": "homepage.name", "value": "SearXNG" }
    - { "key": "homepage.description", "value": "Search engine" }
    - { "key": "homepage.icon", "value": "searxng.png" }
    - { "key": "homepage.href", "value": "https://{{ searxng_fqdn }}/" }
    - {
      "key": "homepage.siteMonitor",
      "value": "https://{{ searxng_fqdn }}/",
    }

- name: deploy-searxng | Create SearXNG networks
  when: searxng_networks is defined
  community.docker.docker_network:
    name: "{{ item.name }}"
    driver: "{{ item.driver | default('bridge') }}"
    internal: "{{ item.internal | default(false) }}"
    state: present
  loop: "{{ searxng_networks }}"

- name: deploy-searxng | Create SearXNG volume
  when: searxng_volume_name is defined
  community.docker.docker_volume:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ searxng_volume_name }}"

- name: deploy-searxng | Check if SearXNG is running
  community.docker.docker_container_info:
    name: "{{ searxng_service_name }}"
  register: searxng_state

- name: deploy-searxng | Remove SearXNG container if changing version
  when:
    - searxng_state.exists
    - (searxng_image | split(':') | last) != (searxng_state.container.Config.Image | split(':') | last)
  block:

    - name: deploy-searxng | Stop and remove existing SearXNG container
      community.docker.docker_container:
        name: "{{ searxng_service_name }}"
        state: absent

    - name: deploy-searxng | Set update SearXNG
      ansible.builtin.set_fact:
        searxng_update: true

- name: deploy-searxng | Deploy SearXNG if not running
  when: not searxng_state.exists or (searxng_update | default(false))
  block:

    - name: deploy-searxng | Pull SearXNG image
      community.docker.docker_image:
        name: "{{ searxng_image }}"
        source: pull

    - name: deploy-searxng | Deploy SearXNG
      community.docker.docker_container:
        name: "{{ searxng_service_name }}"
        image: "{{ searxng_image }}"
        detach: true
        labels: "{{ searxng_container_labels | default(omit) }}"
        networks_cli_compatible: true
        networks: "{{ searxng_networks | default(omit) }}"
        restart: true
        restart_policy: unless-stopped
        state: started
        volumes: "{{ default_host_volumes + searxng_volumes | default(omit) }}"
      register: searxng_container_state

- name: deploy-searxng | Wait for SearXNG to accept connections
  ansible.builtin.wait_for:
    host: "{{ searxng_fqdn }}"
    port: 80
    connect_timeout: 1
    delay: 10
    state: started
    timeout: 30
  register: searxng_running
  retries: 10
  until: searxng_running is success
