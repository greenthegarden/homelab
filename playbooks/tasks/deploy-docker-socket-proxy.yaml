---
- name: deploy-docker-socket-proxy | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

- name: deploy-docker-socket-proxy | Set Docker Socket Proxy configuration facts
  ansible.builtin.set_fact:
    configure_for_docker_volume_backup: "{{ configure_for_docker_volume_backup | default(false) }}"

####### DOCKER-SOCKET-PROXY SECTION

- name: deploy-docker-socket-proxy | Set Docker Socket Proxy facts
  ansible.builtin.set_fact:
    docker_socket_proxy_image: "{{ docker_socket_proxy_image | default('ghcr.io/tecnativa/docker-socket-proxy:latest') }}"
    docker_socket_proxy_service_name: "{{ docker_socket_proxy_service_name | default('docker-socket-proxy') }}"
    docker_socket_proxy_service_port: "{{ docker_socket_proxy_service_port | default(2375) }}"

- name: deploy-docker-socket-proxy | Set Docker Socket Proxy network facts
  ansible.builtin.set_fact:
    docker_socket_proxy_network_name: "{{ docker_socket_proxy_network_name | default(docker_socket_proxy_service_name) }}"

- name: deploy-docker-socket-proxy | Set Docker Socket Proxy volume facts
  ansible.builtin.set_fact:
    docker_socket_proxy_volume_name: "{{ docker_socket_proxy_volume_name | default(docker_socket_proxy_service_name) }}"

- name: deploy-docker-socket-proxy | Set Docker Socket Proxy aggregated facts
  ansible.builtin.set_fact:
    docker_socket_proxy_fqdn: "{{ docker_socket_proxy_service_name }}.{{ ansible_hostname }}.{{ homelab.certificate_domain | default('localdomain') }}"

- name: deploy-docker-socket-proxy | Set Docker Socket Proxy service facts
  ansible.builtin.set_fact:
    docker_socket_proxy_networks:
      - name: "{{ docker_socket_proxy_network_name }}"
    docker_socket_proxy_ports:
      - "{{ docker_socket_proxy_service_port }}:2375/tcp"
    docker_socket_proxy_volumes: []

- name: deploy-docker-socket-proxy | Log Docker Socket Proxy configuration
  ansible.builtin.debug:
    msg:
      - "Docker Socket Proxy image: {{ docker_socket_proxy_image }}"
      - "Docker Socket Proxy service name: {{ docker_socket_proxy_service_name }}"
      - "Docker Socket Proxy FQDN: {{ docker_socket_proxy_fqdn }}"
      - "Docker Socket Proxy networks: {{ docker_socket_proxy_networks | default(omit) }}"
      - "Docker Socket Proxy ports: {{ docker_socket_proxy_ports | default(omit) }}"
      - "Docker Socket Proxy volumes: {{ docker_socket_proxy_volumes | default(omit) }}"

- name: deploy-docker-socket-proxy | Create Docker Socket Proxy container labels
  ansible.builtin.set_fact:
    docker_socket_proxy_container_labels: "{{ docker_socket_proxy_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/Tecnativa/docker-socket-proxy/releases/tag/v${major}.${minor}.${patch}",
    }

- name: deploy-docker-socket-proxy | Pull Docker Socket Proxy image
  community.docker.docker_image_pull:
    name: "{{ docker_socket_proxy_image }}"
    pull: always

- name: deploy-docker-socket-proxy | Deploy Docker Socket Proxy
  community.docker.docker_container:
    name: "{{ docker_socket_proxy_service_name }}"
    image: "{{ docker_socket_proxy_image }}"
    # env:
    #   LOG_LEVEL: info # debug,info,notice,warning,err,crit,alert,emerg
    #   ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
    #   # 0 to revoke access.
    #   # 1 to grant access.
    #   ## Granted by Default
    #   EVENTS: "1"
    #   PING: "1"
    #   VERSION: "1"
    #   ## Revoked by Default
    #   # Security critical
    #   AUTH: "0"
    #   SECRETS: "0"
    #   POST: "{{ 1 if configure_for_docker_volume_backup else 0 | quote }}" # Allow access for Docker Volume Backup to stop containers
    #   ## Not always needed
    #   BUILD: "0"
    #   COMMIT: "0"
    #   CONFIGS: "0"
    #   CONTAINERS: "1" # Allow access to viewing containers (Traefik, Homepage, WUD, Docker Volume Backup.)
    #   DISTRIBUTION: "0"
    #   EXEC: "{{ 1 if configure_for_docker_volume_backup else 0 | quote }}" # Allow access for Docker Volume Backup to execute commands
    #   IMAGES: "0"
    #   INFO: "0"
    #   NETWORKS: "0"
    #   NODES: "{{ 1 if configure_for_docker_volume_backup else 0 | quote }}" # Allow access for Docker Volume Backup to stop containers
    #   PLUGINS: "0"
    #   SERVICES: "0"
    #   SESSION: "0"
    #   SWARM: "0"
    #   SYSTEM: "0"
    #   TASKS: "0"
    #   VOLUMES: "0"
    labels: "{{ docker_socket_proxy_container_labels | default(omit) }}"
    networks: "{{ docker_socket_proxy_networks | default(omit) }}"
    published_ports: "{{ docker_socket_proxy_ports if not configure_for_docker_volume_backup else omit }}"
    recreate: true # Recreate to ensure env changes are used
    restart: true
    restart_policy: unless-stopped
    security_opts:
      - no-new-privileges=true
    state: started
    volumes: "{{ default_host_volumes + docker_host_volume + docker_socket_proxy_volumes | default(omit) }}"
  register: docker_socket_proxy_container_state

- name: deploy-docker-socket-proxy | Wait for Docker Socket Proxy to accept connections
  when: false # not use_docker_socket_proxy_rw not works, needs to be fixed
  ansible.builtin.wait_for:
    host: "{{ docker_socket_proxy_container_state['container']\
      ['NetworkSettings']\
      ['Networks']\
      [docker_monitoring_network_name]\
      ['IPAddress'] }}"
    port: "{{ docker_socket_proxy_service_port }}"
    connect_timeout: 1
    delay: 10
    state: started
    timeout: 30
  register: docker_socket_proxy_running
  retries: 10
  until: docker_socket_proxy_running is success
