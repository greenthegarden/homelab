---
- name: deploy-authentik | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

# https://authentik.com/blog/2020/04/15/loki-quick-tip-how-to-use-a-loki-datasource-in-your-authentik-dashboard/

- name: deploy-authentik | Set Authentik facts
  ansible.builtin.set_fact:
    authentik_service_name: "{{ authentik_service_name | default('authentik') }}"
    authentik_service_port: "{{ authentik_service_port | default(3000) }}"
    authentik_config_dir: /root/authentik

- name: deploy-authentik | Set Authentik aggregated facts
  ansible.builtin.set_fact:
    authentik_fqdn: "{{ authentik_service_name }}.{{ ansible_hostname }}.{{ homelab.lan_domain | default('localdomain') }}"

- name: deploy-authentik | Set Authentik API facts
  ansible.builtin.set_fact:
    authentik_networks:
      - name: "{{ docker_socket_proxy_network_name | default('docker-socket-proxy') }}"
      - name: "{{ web_network_name | default('web') }}"
    authentik_ports:
      - "{{ authentik_service_port | default(3000) }}:3000"
    authentik_volumes:
      - "/root/authentik/config:/app/config"
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

- name: deploy-authentik | Create Authentik container labels
  ansible.builtin.set_fact:
    authentik_container_labels: "{{ authentik_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - { "key": "traefik.docker.network", "value": "{{ web_network_name }}" }
    - {
      "key": "traefik.http.routers.{{ authentik_service_name }}.entrypoints",
      "value": "websecure",
    }
    - {
      "key": "traefik.http.routers.{{ authentik_service_name }}.rule",
      "value": "Host(`{{ authentik_fqdn }}`)",
    }
    - {
      "key": "traefik.http.routers.{{ authentik_service_name }}.service",
      "value": "{{ authentik_service_name }}",
    }
    - {
      "key": "traefik.http.routers.{{ authentik_service_name }}.tls",
      "value": "true",
    }
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/getauthentik/authentik/releases/tag/v${major}.${minor}.${patch}",
    }
    # Homepage labels
    - { "key": "homepage.group", "value": "System" }
    - { "key": "homepage.name", "value": "authentik" }
    - { "key": "homepage.description", "value": "Centralised logins" }
    - { "key": "homepage.icon", "value": "authentik.png" }
    - { "key": "homepage.href", "value": "https://{{ authentik_fqdn }}/" }
    - {
      "key": "homepage.siteMonitor",
      "value": "https://{{ authentik_fqdn }}/",
    }

- name: deploy-authentik | Create Authentik DB container labels
  ansible.builtin.set_fact:
    authentik_db_container_labels: "{{ authentik_db_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # What's up Docker? labels
    # Fix WUD to version 16 for PostgreSQL
    - { "key": "wud.tag.include", "value": '^16+\.\d+\.\d+$$' }
    - {
      "key": "wud.watch.digest",
      "value": "true"
    }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/postgres/postgres/releases/tag/REL_${major}_${minor}",
    }
    # Docker Volume Backup labels
    - {
      "key": "docker-volume-backup.archive-pre",
      "value": "/bin/sh -c 'PGPASSWORD={{ authentik.db_password }} pg_dump -U {{ authentik.db_user }} {{ authentik.db_name }} > /tmp/dumps/dump.sql'",
    }

- name: deploy-authentik | Create Authentik configuration directory
  ansible.builtin.file:
    path: "{{ authentik_config_dir }}"
    state: directory
    mode: "0644"

- name: deploy-authentik | Create Authentik configuration
  ansible.builtin.template:
    src: "templates/authentik/{{ item }}.j2"
    dest: "{{ authentik_config_dir }}/{{ item }}"
    mode: "0644"
  loop:
    - docker-compose.yml
    - authentik.env

# - name: deploy-authentik | Tear down existing services
#   community.docker.docker_compose_v2:
#     project_src: /root/authentik
#     state: absent

- name: deploy-authentik | Deploy Authentik services # noqa: syntax-check[unknown-module]
  community.docker.docker_compose_v2:
    project_src: "{{ authentik_config_dir }}"
    env_files:
      - authentik.env
  register: output
