---

- name: Get host Docker status
  community.docker.docker_host_info:
  register: host_docker_info
  ignore_errors: true

- name: Ensure Docker is available on host
  ansible.builtin.assert:
    that:
      - host_docker_info.host_info.ServerVersion is version('25.0', '>=')
    fail_msg: A version of Docker >= 20 is required to be installed

# https://authentik.com/blog/2020/04/15/loki-quick-tip-how-to-use-a-loki-datasource-in-your-authentik-dashboard/

- name: Set Authentik facts
  ansible.builtin.set_fact:
    authentik_image_name: "{{ authentik_image_name | default('ghcr.io/benphelps/authentik') }}"
    authentik_image_tag: "{{ authentik_image_tag | default('latest') }}"
    authentik_service_name: "{{ authentik_service_name | default('authentik') }}"
    authentik_service_port: "{{ authentik_service_port | default(3000) }}"
    authentik_config_dir: /root/authentik

- name: Set Authentik aggregated facts
  ansible.builtin.set_fact:
    authentik_image: "{{ authentik_image_name }}:{{ authentik_image_tag }}"
    authentik_fqdn: "{{ authentik_service_name }}.{{ homelab.lan_domain | default('localdomain') }}"

- name: Set Authentik API facts
  ansible.builtin.set_fact:
    authentik_networks:
      - name: "{{ docker_socket_proxy_network_name | default('docker-socket-proxy') }}"
      - name: "{{ web_network_name | default('web') }}"
    authentik_ports:
      - "{{ authentik_service_port | default(3000) }}:3000"
    authentik_volumes:
      - "/root/authentik/config:/app/config"
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

- name: Create Authentik container labels
  ansible.builtin.set_fact:
    authentik_container_labels: "{{ authentik_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - { "key": "traefik.docker.network", "value": "{{ web_network_name }}" }
    - {
      "key": "traefik.http.routers.{{ authentik_service_name }}.entrypoints",
      "value": "websecure",
    }
    - {
      "key": "traefik.http.routers.{{ authentik_service_name }}.rule",
      "value": "Host(`{{ authentik_fqdn }}`)",
    }
    - {
      "key": "traefik.http.routers.{{ authentik_service_name }}.service",
      "value": "{{ authentik_service_name }}",
    }
    - {
      "key": "traefik.http.routers.{{ authentik_service_name }}.tls",
      "value": "true",
    }
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/getauthentik/authentik/releases/tag/v$${major}.$${minor}.$${patch}",
    }
    # Homepage labels
    - { "key": "homepage.group", "value": "System" }
    - { "key": "homepage.name", "value": "authentik" }
    - { "key": "homepage.description", "value": "Centralised logins" }
    - { "key": "homepage.icon", "value": "authentik.png" }
    - { "key": "homepage.href", "value": "https://{{ authentik_fqdn }}/" }
    - {
      "key": "homepage.siteMonitor",
      "value": "https://{{ authentik_fqdn }}/",
    }

- name: Create Authentik configuration directory
  ansible.builtin.file:
    path: "{{ authentik_config_dir }}"
    state: directory
    mode: "0644"

- name: Copy Authentik configuration
  ansible.builtin.copy:
    src: files/authentik
    dest: "{{ authentik_config_dir }}/"
    mode: "0644"

# - name: Tear down existing services
#   community.docker.docker_compose_v2:
#     project_src: /root/authentik
#     state: absent

- name: Deploy Authentik services  # noqa: syntax-check[unknown-module]
  community.docker.docker_compose_v2:
    project_src: "{{ authentik_config_dir }}"
    env_files:
      - authentik.env
  register: output
