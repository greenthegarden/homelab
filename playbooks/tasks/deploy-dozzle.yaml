---
- name: deploy-dozzle | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

####### DOZZLE SECTION

# https://dozzle.dev/guide/getting-started

- name: deploy-dozzle | Set Dozzle facts
  ansible.builtin.set_fact:
    dozzle_image: "{{ dozzle_image | default('amir20/dozzle:latest') }}"
    dozzle_service_name: "{{ dozzle_service_name | default('dozzle') }}"
    dozzle_service_port: "{{ dozzle_service_port | default(8080) }}"
    dozzle_config_dir: /root/dozzle

- name: deploy-dozzle | Set Dozzle aggregated facts
  ansible.builtin.set_fact:
    dozzle_fqdn: "{{ dozzle_service_name }}.{{ ansible_hostname }}.{{ homelab.certificate_domain | default('localdomain') }}"

- name: deploy-dozzle | Set Dozzle service facts
  ansible.builtin.set_fact:
    dozzle_networks:
      - name: "{{ monitoring_network_name | default('monitoring') }}"
      - name: "{{ web_network_name | default('web') }}"
    dozzle_ports:
      # Published ports to expose outside the container
      # host port:container port
      - "{{ dozzle_service_port }}:8080"
    dozzle_volumes:
      # Local paths to mount into the container
      # local path:container path
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

- name: deploy-dozzle | Create Dozzle container labels
  ansible.builtin.set_fact:
    dozzle_container_labels: "{{ dozzle_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # ---------------------------------------------------------------
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - {
      "key": "traefik.http.routers.{{ dozzle_service_name }}.entrypoints",
      "value": "websecure",
    }
    - {
      "key": "traefik.http.routers.{{ dozzle_service_name }}.rule",
      "value": "Host(`{{ dozzle_fqdn }}`)",
    }
    # ---------------------------------------------------------------
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/amir20/dozzle/releases/tag/v${major}.${minor}.${patch}",
    }
    # ---------------------------------------------------------------
    # Homepage labels
    - { "key": "homepage.group", "value": "Monitoring" }
    - { "key": "homepage.name", "value": "Dozzle" }
    - {
      "key": "homepage.description",
      "value": "Realtime log viewer for docker containers",
    }
    - { "key": "homepage.icon", "value": "dozzle.png" }
    - { "key": "homepage.href", "value": "https://{{ dozzle_fqdn }}/" }
    - { "key": "homepage.siteMonitor", "value": "https://{{ dozzle_fqdn }}/" }

- name: deploy-dozzle | Pull Dozzle image
  community.docker.docker_image:
    name: "{{ dozzle_image }}"
    source: pull

# docker run -d -v /var/run/docker.sock:/var/run/docker.sock -p 8080:8080 amir20/dozzle:latest
- name: deploy-dozzle | Deploy Dozzle
  community.docker.docker_container:
    name: "{{ dozzle_service_name }}"
    image: "{{ dozzle_image }}"
    detach: true
    env:
      DOZZLE_ENABLE_ACTIONS: "true"
      DOZZLE_REMOTE_AGENT: dozzle.{{ lan_domain }}:7007,ansible.{{ lan_domain }}:7007,broker.{{ lan_domain }}:7007,fireflyiii.{{ lan_domain }}:7007,frigate.{{ lan_domain }}:7007,grocy.{{ lan_domain }}:7007,homebox.{{ lan_domain }}:7007,homepage.{{ lan_domain }}:7007,hortusfox.{{ lan_domain }}:7007,productivity.{{ lan_domain }}:7007,ollama.{{ lan_domain }}:7007,portainer.{{ lan_domain }}:7007,uptimekuma.{{ lan_domain }}:7007,vaultwarden.{{ lan_domain }}:7007,whatsupdocker.{{ lan_domain }}:7007
    healthcheck:
      test: ["CMD", "/dozzle", "healthcheck"]
      interval: 3s
      retries: 5
      start_period: 30s
      timeout: 30s
    labels: "{{ dozzle_container_labels | default(omit) }}"
    networks_cli_compatible: true
    networks: "{{ dozzle_networks }}"
    restart: true
    restart_policy: unless-stopped
    state: started
    volumes: "{{ dozzle_volumes }}"
  register: dozzle_container_state

- name: deploy-dozzle | Wait for Dozzle to accept connections
  ansible.builtin.wait_for:
    host: "{{ dozzle_fqdn }}"
    port: 80
    connect_timeout: 1
    delay: 10
    state: started
    timeout: 30
  register: dozzle_running
  until: dozzle_running is success
  retries: 10
