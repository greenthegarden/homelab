---
- name: deploy-dozzle | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

####### DOZZLE SECTION

# https://dozzle.dev/guide/getting-started

- name: deploy-dozzle | Set Dozzle facts
  ansible.builtin.set_fact:
    dozzle_image: "{{ dozzle_image | default('amir20/dozzle:latest') }}"
    dozzle_service_name: "{{ dozzle_service_name | default('dozzle') }}"
    dozzle_service_port: "{{ dozzle_service_port | default(8080) }}"

- name: deploy-dozzle | Set Dozzle network facts
  ansible.builtin.set_fact:
    dozzle_network_name: "{{ dozzle_network_name | default(dozzle_service_name) }}"

- name: deploy-dozzle | Set Dozzle volume facts
  ansible.builtin.set_fact:
    dozzle_volume_name: "{{ dozzle_volume_name | default(dozzle_service_name) }}"

- name: deploy-dozzle | Set Dozzle aggregated facts
  ansible.builtin.set_fact:
    dozzle_fqdn: "{{ dozzle_service_name }}.{{ ansible_hostname }}.{{ homelab.certificate_domain | default('localdomain') }}"

- name: deploy-dozzle | Set Dozzle service facts
  ansible.builtin.set_fact:
    dozzle_networks:
      # Reverse Proxy  network is used to expose applications via Traefik
      - { name: "{{ reverse_proxy_network_name | default('reverse-proxy') }}" }
    dozzle_ports:
      # Published ports to expose outside the container
      # host port:container port
      - "{{ dozzle_service_port }}:8080"
    dozzle_volumes: []
      # Local paths to mount into the container
      # local path:container path

- name: deploy-dozzle | Log Dozzle configuration
  ansible.builtin.debug:
    msg:
      - "Dozzle image: {{ dozzle_image }}"
      - "Dozzle service name: {{ dozzle_service_name }}"
      - "Dozzle FQDN: {{ dozzle_fqdn }}"
      - "Dozzle networks: {{ dozzle_networks | default(omit) }}"
      - "Dozzle ports: {{ dozzle_ports | default(omit) }}"
      - "Dozzle volumes: {{ dozzle_volumes | default(omit) }}"

- name: deploy-dozzle | Create Dozzle container labels
  ansible.builtin.set_fact:
    dozzle_container_labels: "{{ dozzle_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # ---------------------------------------------------------------
    # Homepage labels
    - { "key": "homepage.group", "value": "Monitoring" }
    - { "key": "homepage.name", "value": "Dozzle" }
    - {
      "key": "homepage.description",
      "value": "Realtime log viewer for docker containers",
    }
    - { "key": "homepage.icon", "value": "dozzle.png" }
    - { "key": "homepage.href", "value": "https://{{ dozzle_fqdn }}/" }
    - { "key": "homepage.siteMonitor", "value": "https://{{ dozzle_fqdn }}/" }
    # ---------------------------------------------------------------
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - {
      "key": "traefik.http.routers.{{ dozzle_service_name }}.entrypoints",
      "value": "{{ traefik_entrypoint_secure_name }}",
    }
    - {
      "key": "traefik.http.routers.{{ dozzle_service_name }}.rule",
      "value": "Host(`{{ dozzle_fqdn }}`)",
    }
    # ---------------------------------------------------------------
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/amir20/dozzle/releases/tag/v${major}.${minor}.${patch}",
    }

- name: deploy-dozzle | Create Dozzle network
  when: dozzle_networks is defined
  community.docker.docker_network:
    name: "{{ item.name }}"
    driver: "{{ item.driver | default('bridge') }}"
    internal: "{{ item.internal | default(false) }}"
    state: present
  loop: "{{ dozzle_networks }}"

- name: deploy-dozzle | Create volume for Dozzle
  when: dozzle_volume_name is defined and (dozzle_volumes | length > 0)
  community.docker.docker_volume:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ dozzle_volume_name }}"

- name: deploy-dozzle | Pull Dozzle image
  community.docker.docker_image:
    name: "{{ dozzle_image }}"
    source: pull

- name: deploy-dozzle | Deploy Dozzle
  community.docker.docker_container:
    name: "{{ dozzle_service_name }}"
    image: "{{ dozzle_image }}"
    detach: true
    env:
      DOZZLE_ENABLE_ACTIONS: "true" # "{{ true | quote }}"
      DOZZLE_REMOTE_AGENT: dozzle.{{ lan_domain }}:7007,ansible.{{ lan_domain }}:7007,broker.{{ lan_domain }}:7007,fireflyiii.{{ lan_domain }}:7007,frigate.{{ lan_domain }}:7007,grocy.{{ lan_domain }}:7007,homebox.{{ lan_domain }}:7007,homepage.{{ lan_domain }}:7007,hortusfox.{{ lan_domain }}:7007,productivity.{{ lan_domain }}:7007,ollama.{{ lan_domain }}:7007,portainer.{{ lan_domain }}:7007,uptimekuma.{{ lan_domain }}:7007,vaultwarden.{{ lan_domain }}:7007,whatsupdocker.{{ lan_domain }}:7007
    healthcheck:
      test: ["CMD", "/dozzle", "healthcheck"]
      interval: 3s
      retries: 5
      start_period: 30s
      timeout: 30s
    labels: "{{ dozzle_container_labels | default(omit) }}"
    networks_cli_compatible: true
    networks: "{{ dozzle_networks | ansible.utils.remove_keys(target=['internal']) | default(omit) }}"
    restart: true
    restart_policy: unless-stopped
    state: started
    volumes: "{{ default_host_volumes + dozzle_volumes | default(omit) }}"
  register: dozzle_container_state

- name: deploy-dozzle | Wait for Dozzle to accept connections
  ansible.builtin.wait_for:
    host: "{{ dozzle_fqdn }}"
    port: 80
    connect_timeout: 1
    delay: 10
    state: started
    timeout: 30
  register: dozzle_running
  retries: 10
  until: dozzle_running is success
