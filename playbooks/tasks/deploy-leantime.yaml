---
- name: deploy-leantime | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

####### LEANTIME SECTION

# https://leantime.io/
# https://github.com/Leantime/leantime
# https://github.com/Leantime/docker-leantime
# https://hub.docker.com/r/leantime/leantime

- name: deploy-leantime | Set Leantime facts
  ansible.builtin.set_fact:
    leantime_image: "{{ leantime_image | default('leantime/leantime:latest') }}"
    leantime_image_tag: "{{ leantime_image_tag | default('latest') }}"
    leantime_service_name: "{{ leantime_service_name | default('leantime') }}"
    leantime_service_port: "{{ leantime_service_port | default(8080) }}"

- name: deploy-leantime | Set Leantime network facts
  ansible.builtin.set_fact:
    leantime_network_name: "{{ leantime_network_name | default(leantime_service_name) }}"

- name: deploy-leantime | Set Leantime volume facts
  ansible.builtin.set_fact:
    leantime_volume_public_userfiles: "{{ leantime_volume_public_userfiles | default(leantime_service_name + '-public-userfiles') }}"
    leantime_volume_userfiles: "{{ leantime_volume_userfiles | default(leantime_service_name + '-userfiles') }}"
    leantime_volume_plugins: "{{ leantime_volume_plugins | default(leantime_service_name + '-plugins') }}"
    leantime_volume_logs: "{{ leantime_volume_logs | default(leantime_service_name + '-logs') }}"

- name: deploy-leantime | Set Leantime configuration directory facts
  ansible.builtin.set_fact:
    leantime_config_dir: "{{ leantime_config_dir | default('/root/' + leantime_service_name) }}"

- name: deploy-leantime | Set Leantime aggregated facts
  ansible.builtin.set_fact:
    leantime_fqdn: "{{ leantime_service_name }}.{{ ansible_hostname }}.{{ homelab.certificate_domain | default('localdomain') }}"

- name: deploy-leantime | Set Leantime service facts
  ansible.builtin.set_fact:
    leantime_networks:
      - { name: "{{ leantime_network_name }}", internal: true }
      # Reverse Proxy  network is used to expose applications via Traefik
      - { name: "{{ reverse_proxy_network_name | default('reverse-proxy') }}" }
    leantime_ports:
      # Published ports to expose outside the container
      # host port:container port
      - "{{ leantime_service_port }}:8080"
    leantime_volumes:
      # Local paths to mount into the container
      # local path:container path
      - "{{ leantime_volume_public_userfiles }}:/var/www/html/public/userfiles"
      - "{{ leantime_volume_userfiles }}:/var/www/html/userfiles"
      - "{{ leantime_volume_plugins }}:/var/www/html/app/Plugins"
      - "{{ leantime_volume_logs }}:/var/www/html/storage/logs"

- name: deploy-leantime | Log Leantime configuration
  ansible.builtin.debug:
    msg:
      - "Leantime image: {{ leantime_image }}"
      - "Leantime service name: {{ leantime_service_name }}"
      - "Leantime FQDN: {{ leantime_fqdn }}"
      - "Leantime networks: {{ leantime_networks | default(omit) }}"
      - "Leantime ports: {{ leantime_ports | default(omit) }}"
      - "Leantime volumes: {{ leantime_volumes | default(omit) }}"

- name: deploy-leantime | Create Leantime container labels
  ansible.builtin.set_fact:
    leantime_container_labels: "{{ leantime_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # ---------------------------------------------------------------
    # Homepage labels
    - { "key": "homepage.group", "value": "Applications" }
    - { "key": "homepage.name", "value": "Leantime" }
    - { "key": "homepage.description", "value": "Open source project management system" }
    - { "key": "homepage.icon", "value": "leantime.png" }
    - { "key": "homepage.href", "value": "https://{{ leantime_fqdn }}/" }
    - { "key": "homepage.siteMonitor", "value": "https://{{ leantime_fqdn }}/" }
    # ---------------------------------------------------------------
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - {
      "key": "traefik.http.routers.{{ leantime_service_name }}.entrypoints",
      "value": "{{ traefik_entrypoint_secure_name }}",
    }
    - {
      "key": "traefik.http.routers.{{ leantime_service_name }}.rule",
      "value": "Host(`{{ leantime_fqdn }}`)",
    }
    # ---------------------------------------------------------------
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/leantime/leantime/releases/tag/v${major}.${minor}.${patch}",
    }

- name: deploy-leantime | Create Leantime networks
  when: leantime_networks is defined
  community.docker.docker_network:
    name: "{{ item.name }}"
    driver: "{{ item.driver | default('bridge') }}"
    internal: "{{ item.internal | default(false) }}"
    state: present
  loop: "{{ leantime_networks }}"

- name: deploy-leantime | Create Leantime volumes
  community.docker.docker_volume:
    name: "{{ item }}"
    state: present
  loop:
    - "{{ leantime_volume_public_userfiles }}"
    - "{{ leantime_volume_userfiles }}"
    - "{{ leantime_volume_plugins }}"
    - "{{ leantime_volume_logs }}"

- name: deploy-leantime | Deploy MySQL database
  when: leantime_mysql_database_create | default(true)
  ansible.builtin.include_tasks:
    file: tasks/deploy-mysql.yaml
  vars:
    mysql_image: mysql:8.4
    mysql_service_name: "{{ leantime_service_name }}-mysql"
    mysql_network_name: "{{ leantime_network_name }}"
    mysql_volume_name: "{{ leantime_service_name }}-mysql"
    mysql_env:
      MYSQL_ROOT_PASSWORD: "{{ leantime.mysql_root_password | default('dummy') }}"
      MYSQL_DATABASE: "{{ leantime.mysql_database | default('leantime') }}"
      MYSQL_USER: "{{ leantime.mysql_user | default('leantime') }}"
      MYSQL_PASSWORD: "{{ leantime.mysql_password | default('dummy') }}"
    mysql_command:
      - "--character-set-server=UTF8MB4"
      - "--collation-server=UTF8MB4_unicode_ci"

- name: deploy-leantime | Set Leantime env facts
  ansible.builtin.set_fact:
    leantime_env:
      LEAN_DB_HOST: "{{ mysql_service_name }}"
      LEAN_DB_DATABASE: "{{ leantime.mysql_database | default('leantime') }}"
      LEAN_DB_USER: "{{ leantime.mysql_user | default('leantime') }}"
      LEAN_DB_PASSWORD: "{{ leantime.mysql_password | default('dummy') }}"
      LEAN_LANGUAGE: "{{ homelab.language | default('en_GB') }}"
      LEAN_TIMEZONE: "{{ homelab.timezone | default('UTC') }}"

- name: deploy-leantime | Check if Leantime is running
  community.docker.docker_container_info:
    name: "{{ leantime_service_name }}"
  register: leantime_state

- name: deploy-leantime | Remove Leantime container if changing version
  when:
    - leantime_state.exists
    - (leantime_image | split(':') | last) != (leantime_state.container.Config.Image | split(':') | last)
  block:
    - name: deploy-leantime | Stop and remove existing Leantime container
      community.docker.docker_container:
        name: "{{ leantime_service_name }}"
        state: absent

    - name: deploy-leantime | Set update Leantime
      ansible.builtin.set_fact:
        leantime_update: true

- name: deploy-leantime | Deploy Leantime if not running
  when:
    - not leantime_state.exists or (leantime_update | default(false))
  block:
    - name: deploy-leantime | Pull Leantime image
      community.docker.docker_image:
        name: "{{ leantime_image }}"
        source: pull

    - name: deploy-leantime | Deploy Leantime
      community.docker.docker_container:
        name: "{{ leantime_service_name }}"
        image: "{{ leantime_image }}"
        capabilities:
          - CAP_CHOWN
          - CAP_SETGID
          - CAP_SETUID
        detach: true
        env: "{{ leantime_env | default(omit) }}"
        labels: "{{ leantime_container_labels | default(omit) }}"
        networks_cli_compatible: true
        networks: "{{ leantime_networks | ansible.utils.remove_keys(target=['internal']) | default(omit) }}"
        restart: true
        restart_policy: unless-stopped
        security_opts:
          - "no-new-privileges:true"
        state: started
        volumes: "{{ default_host_volumes + leantime_volumes | default(omit) }}"
      register: leantime_container_state

- name: deploy-leantime | Wait for Leantime to accept connections
  ansible.builtin.wait_for:
    host: "{{ leantime_fqdn }}"
    port: 80
    connect_timeout: 1
    delay: 10
    state: started
    timeout: 30
  register: leantime_running
  retries: 10
  until: leantime_running is success
