---
- name: deploy-docker-volume-backup | Only run if volume to backup has been defined
  when: docker_volume_backup_volume_to_backup is defined
  block:
    - name: deploy-docker-volume-backup | Ensure modern version of Docker is available on host
      ansible.builtin.include_tasks:
        file: tasks/hosts-dependency-check-docker-version.yaml

    - name: deploy-docker-volume-backup | Ensure Docker Socket Proxy is deployed and configured
      ansible.builtin.include_tasks:
        file: tasks/deploy-docker-socket-proxy.yaml
      vars:
        configure_for_docker_volume_backup: true

    # https://offen.github.io/docker-volume-backup/

    - name: deploy-docker-volume-backup | Set Global facts
      ansible.builtin.set_fact:
        local_backups_dir: "{{ local_backups_dir | default('/tmp/backups') }}"

    - name: deploy-docker-volume-backup | Set Docker Volume Backup facts
      ansible.builtin.set_fact:
        docker_volume_backup_image: "{{ docker_volume_backup_image | default('offen/docker-volume-backup:latest') }}"
        docker_volume_backup_service_name: "{{ docker_volume_backup_service_name | default('docker-volume-backup') }}"
        docker_volume_backup_config_dir: /root/docker-volume-backup
        docker_volume_backup_backup_label: "{{ docker_volume_backup_backup_label | default('') }}"

    - name: deploy-docker-volume-backup | Set Docker Volume Backup aggregated facts
      ansible.builtin.set_fact:
        docker_volume_backup_fqdn: "{{ docker_volume_backup_service_name }}.{{ ansible_hostname }}.{{ homelab.certificate_domain | default('localdomain') }}"

    - name: deploy-docker-volume-backup | Set Docker Volume Backup service facts
      ansible.builtin.set_fact:
        docker_volume_backup_networks:
          - name: "{{ docker_socket_proxy_network_name | default('docker-socket-proxy') }}"
          # TODO: Think this should not be on web network
          # - name: "{{ web_network_name | default('web') }}"
        docker_volume_backup_volumes:
          - "{{ local_backups_dir }}:/archive"

    - name: deploy-docker-volume-backup | Add volume to backup to Docker Volume Backup volumes
      ansible.builtin.set_fact:
        docker_volume_backup_volumes: "{{ docker_volume_backup_volumes + docker_volume_backup_volume_to_backup }}"

    - name: deploy-docker-volume-backup | Create Docker Volume Backup container labels
      ansible.builtin.set_fact:
        docker_volume_backup_container_labels: "{{ docker_volume_backup_container_labels | default({}) | combine({item.key: item.value}) }}"
      with_items:
        # What's up Docker? labels
        - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
        - {
          "key": "wud.link.template",
          "value": "https://github.com/offen/docker-volume-backup/releases/tag/v${major}.${minor}.${patch}",
        }

    - name: deploy-docker-volume-backup | Create Docker Volume Backup local archive directory
      ansible.builtin.file:
        path: "{{ local_backups_dir }}"
        mode: "0644"
        state: directory
      register: local_archive_directory_creation

    - name: deploy-docker-volume-backup | Create Docker Volume Backup configuration directory
      ansible.builtin.file:
        path: "{{ docker_volume_backup_config_dir }}"
        mode: "0644"
        state: directory
      register: docker_volume_backup_configuration_creation

    - name: deploy-docker-volume-backup | Create Docker Volume Backup configuration
      ansible.builtin.template:
        src: templates/docker-volume-backup/docker-volume-backup.env.j2
        dest: "{{ docker_volume_backup_config_dir }}/docker-volume-backup.env"
        mode: "0644"
      register: docker_volume_backup_configuration_creation

    - name: deploy-docker-volume-backup | Pull Docker Volume Backup image
      community.docker.docker_image:
        name: "{{ docker_volume_backup_image }}"
        source: pull

    - name: deploy-docker-volume-backup | Deploy Docker Volume Backup
      community.docker.docker_container:
        name: "{{ docker_volume_backup_service_name }}"
        image: "{{ docker_volume_backup_image }}"
        env_file: "{{ docker_volume_backup_config_dir }}/docker-volume-backup.env"
        labels: "{{ docker_volume_backup_container_labels }}"
        networks: "{{ docker_volume_backup_networks }}"
        recreate: true # Recreate to ensure env changes are used
        restart: true
        restart_policy: always
        security_opts:
          - no-new-privileges=true
        state: started
        volumes: "{{ docker_volume_backup_volumes + default_host_volumes }}"
      register: docker_volume_backup_container_state
