---

- name: deploy-docker-volume-backup | Only run if volume to backup has been defined
  when: docker_volume_backup_volume_to_backup is defined
  block:

    - name: deploy-docker-volume-backup | Ensure modern version of Docker is available on host
      ansible.builtin.include_tasks:
        file: tasks/hosts-dependency-check-docker-version.yaml

    # - name: deploy-docker-volume-backup | Ensure Docker Socket Proxy is deployed and configured
    #   ansible.builtin.include_tasks:
    #     file: tasks/deploy-docker-socket-proxy.yaml
    #   vars:
    #     configure_for_docker_volume_backup: true

    # - name: deploy-docker-volume-backup | Deploy a containerised read-write instance of Docker Socket Proxy
    #   ansible.builtin.include_tasks:
    #     file: tasks/deploy-docker-socket-proxy.yaml
    #   vars:
    #     use_docker_socket_proxy_rw: true
    #     configure_for_docker_volume_backup: true

    ####### DOCKER-VOLUME-BACKUP SECTION

    # https://offen.github.io/docker-volume-backup/

    # - name: deploy-docker-volume-backup | Set Global facts
    #   ansible.builtin.set_fact:
    #     docker_volume_backup_local_backups_dir: "{{ docker_volume_backup_local_backups_dir | default('/tmp/backups') }}"

    - name: deploy-docker-volume-backup | Set Docker Volume Backup facts
      ansible.builtin.set_fact:
        docker_volume_backup_image: "{{ docker_volume_backup_image | default('offen/docker-volume-backup:latest') }}"
        docker_volume_backup_service_name: "{{ docker_volume_backup_service_name | default('docker-volume-backup') }}"
        docker_volume_backup_backup_label: "{{ docker_volume_backup_backup_label | default('') }}"

    - name: deploy-docker-volume-backup | Set Docker Volume Backup configuration facts
      ansible.builtin.set_fact:
        docker_volume_backup_config_dir: "{{ docker_volume_backup_config_dir | default('/root/' + docker_volume_backup_service_name) }}"

    - name: deploy-docker-volume-backup | Set Docker Volume Backup network facts
      ansible.builtin.set_fact:
        docker_volume_backup_network_name: "{{ docker_volume_backup_network_name | default(docker_volume_backup_service_name) }}"

    - name: deploy-docker-volume-backup | Set Docker Volume Backup volume facts
      ansible.builtin.set_fact:
        docker_volume_backup_local_backups_dir: "{{ docker_volume_backup_local_backups_dir | default(local_backups_dir) }}"

    - name: deploy-docker-volume-backup | Set Docker Volume Backup aggregated facts
      ansible.builtin.set_fact:
        docker_volume_backup_fqdn: "{{ docker_volume_backup_service_name }}.{{ ansible_hostname }}.{{ homelab.certificate_domain | default('localdomain') }}"

    - name: deploy-docker-volume-backup | Set Docker Volume Backup service facts
      ansible.builtin.set_fact:
        docker_volume_backup_networks:
          - { name: "{{ docker_volume_backup_network_name }}", internal: true }
        docker_volume_backup_volumes:
          - "{{ docker_volume_backup_local_backups_dir }}:/archive"

    - name: deploy-docker-volume-backup | Add volume to backup to Docker Volume Backup volumes
      when: docker_volume_backup_volumes is defined and (docker_volume_backup_volumes | length > 0)
      ansible.builtin.set_fact:
        docker_volume_backup_volumes: "{{ docker_volume_backup_volumes + docker_volume_backup_volume_to_backup }}"

    - name: deploy-docker-volume-backup | Log Docker Volume Backup configuration
      ansible.builtin.debug:
        msg:
          - "Docker Volume Backup image: {{ docker_volume_backup_image }}"
          - "Docker Volume Backup service name: {{ docker_volume_backup_service_name }}"
          - "Docker Volume Backup FQDN: {{ docker_volume_backup_fqdn }}"
          - "Docker Volume Backup networks: {{ docker_volume_backup_networks | default(omit) }}"
          - "Docker Volume Backup ports: {{ docker_volume_backup_ports | default(omit) }}"
          - "Docker Volume Backup volumes: {{ docker_volume_backup_volumes | default(omit) }}"

    - name: deploy-docker-volume-backup | Create Docker Volume Backup container labels
      ansible.builtin.set_fact:
        docker_volume_backup_container_labels: "{{ docker_volume_backup_container_labels | default({}) | combine({item.key: item.value}) }}"
      with_items:
        # What's up Docker? labels
        - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
        - {
          "key": "wud.link.template",
          "value": "https://github.com/offen/docker-volume-backup/releases/tag/v${major}.${minor}.${patch}",
        }

    - name: deploy-docker-volume-backup | Create Docker Volume Backup networks
      when: docker_volume_backup_networks is defined
      community.docker.docker_network:
        name: "{{ item.name }}"
        driver: "{{ item.driver | default('bridge') }}"
        internal: "{{ item.internal | default(false) }}"
        state: present
      loop: "{{ docker_volume_backup_networks }}"

    - name: deploy-docker-volume-backup | Deploy a containerised instance of Docker Socket Proxy configured for Docker Volume Backup
      ansible.builtin.include_tasks:
        file: tasks/deploy-docker-socket-proxy.yaml
      vars:
        docker_socket_proxy_service_name: "docker-socket-proxy-{{ docker_volume_backup_service_name }}"
        docker_socket_proxy_service_port: 2375
        docker_socket_proxy_network_name: "{{ docker_volume_backup_network_name }}"
        docker_socket_proxy_network_internal: true
        docker_socket_proxy_env:
          ALLOW_START: "1"
          ALLOW_STOP: "1"
          CONTAINERS: "1"
          EXEC: "1"
          INFO: "1"
          NODES: "1"
          TASKS: "1"

    - name: deploy-docker-volume-backup | Create Docker Volume Backup mount directories and configuration
      when: docker_volume_backup_local_backups_dir is defined and docker_volume_backup_config_dir is defined
      block:

        - name: deploy-docker-volume-backup | Create Docker Volume Backup local archive directory
          ansible.builtin.file:
            path: "{{ docker_volume_backup_local_backups_dir }}"
            mode: "0644"
            state: directory
          register: local_archive_directory_creation

        - name: deploy-docker-volume-backup | Create Docker Volume Backup configuration directory
          ansible.builtin.file:
            path: "{{ docker_volume_backup_config_dir }}"
            mode: "0644"
            state: directory
          register: docker_volume_backup_configuration_creation

        - name: deploy-docker-volume-backup | Create Docker Volume Backup configuration
          ansible.builtin.template:
            src: templates/docker-volume-backup/docker-volume-backup.env.j2
            dest: "{{ docker_volume_backup_config_dir }}/docker-volume-backup.env"
            mode: "0644"
          register: docker_volume_backup_configuration_creation

    - name: deploy-docker-volume-backup | Pull Docker Volume Backup image
      community.docker.docker_image:
        name: "{{ docker_volume_backup_image }}"
        source: pull

    - name: deploy-docker-volume-backup | Deploy Docker Volume Backup
      community.docker.docker_container:
        name: "{{ docker_volume_backup_service_name }}"
        image: "{{ docker_volume_backup_image }}"
        env_file: "{{ docker_volume_backup_config_dir }}/docker-volume-backup.env"
        labels: "{{ docker_volume_backup_container_labels | default(omit) }}"
        networks: "{{ docker_volume_backup_networks | ansible.utils.remove_keys(target=['internal']) | default(omit) }}"
        recreate: true # Recreate to ensure env changes are used
        restart: true
        restart_policy: always
        security_opts:
          - no-new-privileges=true
        state: started
        volumes: "{{ default_host_volumes + docker_volume_backup_volumes | default(omit) }}"
      register: docker_volume_backup_container_state
