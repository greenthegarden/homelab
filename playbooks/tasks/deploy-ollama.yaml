---
- name: deploy-ollama | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

####### OLLAMA SECTION

# https://hub.docker.com/r/ollama/ollama

- name: deploy-ollama | Set Ollama facts
  ansible.builtin.set_fact:
    ollama_image: "{{ ollama_image | default('ollama/ollama:latest') }}"
    ollama_service_name: "{{ ollama_service_name | default('ollama') }}"
    ollama_service_port: "{{ ollama_service_port | default(11434) }}"
    ollama_volume_name: "{{ ollama_volume_name | default('ollama') }}"

- name: deploy-ollama | Set Ollama aggregated facts
  ansible.builtin.set_fact:
    ollama_fqdn: "{{ ollama_service_name }}.{{ ansible_hostname }}.{{ homelab.lan_domain | default('localdomain') }}"

- name: deploy-ollama | Set Ollama service facts
  ansible.builtin.set_fact:
    ollama_networks:
      - name: "{{ web_network_name | default('web') }}"
    ollama_ports:
      # Published ports to expose outside the container
      # host port:container port
      - "{{ ollama_service_port }}:11434"
    ollama_volumes:
      # Local paths to mount into the container
      # local path:container path
      - "{{ ollama_volume_name }}:/root/.ollama"
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

- name: deploy-ollama | Create Ollama container labels
  ansible.builtin.set_fact:
    ollama_container_labels: "{{ ollama_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # ---------------------------------------------------------------
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - {
      "key": "traefik.http.routers.{{ ollama_service_name }}.entrypoints",
      "value": "websecure",
    }
    - {
      "key": "traefik.http.routers.{{ ollama_service_name }}.rule",
      "value": "Host(`{{ ollama_fqdn }}`)",
    }
    # - {
    #   "key": "traefik.http.routers.{{ ollama_service_name }}.service",
    #   "value": "{{ ollama_service_name }}",
    # }
    # - {
    #   "key": "traefik.http.routers.{{ ollama_service_name }}.tls",
    #   "value": "true",
    # }
    # - {
    #   "key": "traefik.http.services.{{ ollama_service_name }}.loadBalancer.server.port",
    #   "value": "{{ ollama_service_port }}",
    # }
    # ---------------------------------------------------------------
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/open-webui/open-webui/releases/tag/v${major}.${minor}.${patch}",
    }
    # ---------------------------------------------------------------
    # Docker Volume Backup labels
    - { "key": "docker-volume-backup.stop-during-backup", "value": "true" }

- name: deploy-ollama | Create Ollama volume
  community.docker.docker_volume:
    name: "{{ ollama_volume_name }}"
    state: present

- name: deploy-ollama | Check if Ollama is running
  community.docker.docker_container_info:
    name: "{{ ollama_service_name }}"
  register: ollama_state

- name: deploy-ollama | Update Ollama container if changing version
  when:
    - ollama_state.exists
    - (ollama_image | split(':') | last) != (ollama_state.container.Config.Image | split(':') | last)
  block:
    - name: deploy-ollama | Stop and remove existing Ollama container
      community.docker.docker_container:
        name: "{{ ollama_service_name }}"
        state: absent

    - name: deploy-ollama | Set update Ollama
      ansible.builtin.set_fact:
        ollama_update: true

- name: deploy-ollama | Deploy Ollama if not running
  when: not ollama_state.exists or (ollama_update | default(false))
  block:
    - name: deploy-ollama | Pull Ollama image
      community.docker.docker_image:
        name: "{{ ollama_image }}"
        source: pull

    # docker run -d -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama
    - name: deploy-ollama | Deploy Ollama
      community.docker.docker_container:
        name: "{{ ollama_service_name }}"
        image: "{{ ollama_image }}"
        detach: true
        env:
          TZ: "{{ homelab.timezone | default('UTC') }}"
        labels: "{{ ollama_container_labels | default(omit) }}"
        networks_cli_compatible: true
        networks: "{{ ollama_networks }}"
        published_ports: "{{ ollama_ports }}" # <= TODO: check is required
        restart: true
        restart_policy: unless-stopped
        state: started
        volumes: "{{ ollama_volumes }}"
      register: ollama_container_state
