---

- name: homelab-deploy-support-services | Load homelab vars
  ansible.builtin.include_vars:
    file: vars/homelab_env.yaml

- name: homelab-deploy-support-services | Configure Homelab Docker base
  ansible.builtin.include_tasks:
    file: tasks/homelab-configure-docker-base.yaml

- name: homelab-deploy-support-services | Set Homelab network facts
  ansible.builtin.set_fact:
    docker_socket_proxy_network_name: "{{ docker_socket_proxy_network_name | default('docker-socket-proxy') }}"
    docker_socket_proxy_network_interal: "{{ docker_socket_proxy_network_interal | default(false) }}"
    docker_socket_proxy_rw_network_name: "{{ docker_socket_proxy_rw_network_name | default('docker-socket-proxy-rw') }}"
    docker_socket_proxy_rw_network_interal: "{{ docker_socket_proxy_rw_network_interal | default(true) }}"
    monitoring_network_name: "{{ monitoring_network_name | default('monitoring') }}"
    monitoring_network_internal: "{{ monitoring_network_internal | default(true) }}"
    web_network_name: "{{ web_network_name | default('web') }}"
    web_network_internal: "{{ web_network_internal | default(false) }}"

- name: homelab-deploy-support-services | Create Homelab Docker networks  # noqa: syntax-check[unknown-module]
  community.docker.docker_network:
    name: "{{ item.name }}"
    driver: "{{ item.driver }}"
    internal: "{{ item.internal }}"
  loop:
    - name: "{{ docker_socket_proxy_network_name }}"
      driver: bridge
      internal: "{{ docker_socket_proxy_network_interal }}"
    - name: "{{ docker_socket_proxy_rw_network_name }}"
      driver: bridge
      internal: "{{ docker_socket_proxy_rw_network_interal }}"
    - name: "{{ monitoring_network_name }}"
      driver: bridge
      internal: "{{ monitoring_network_internal }}"
    - name: "{{ web_network_name }}"
      driver: bridge
      internal: "{{ web_network_internal }}"

# Use the following agents to monitor Docker services via host docker socket

# Portainer used to provide a web UI to manage Docker services
- name: homelab-deploy-support-services | Deploy a containerised instance of Portainer Agent
  ansible.builtin.include_tasks:
    file: tasks/deploy-portainer-agent.yaml

# Dozzle used to provide a web UI to view Docker logs
- name: homelab-deploy-support-services | Deploy a containerised instance of Dozzle Agent
  ansible.builtin.include_tasks:
    file: tasks/deploy-dozzle-agent.yaml

# Docker Socker Proxy used to restrict access to required Docker APIs to monitor remote Docker services
# Used by Traefik, Homepage and What's up Docker?
- name: homelab-deploy-support-services | Deploy a containerised read-only instance of Docker Socket Proxy
  ansible.builtin.include_tasks:
    file: tasks/deploy-docker-socket-proxy.yaml

# Traefik used as a reverse proxy to manage access to web services with SSL via Let's Encrypt
- name: homelab-deploy-support-services | Deploy a containerised instance of Traefik
  ansible.builtin.include_tasks:
    file: tasks/deploy-traefik.yaml

# Tinyauth used to provide basic authentication for web services
- name: homelab-deploy-support-services | Deploy a containerised instance of Tinyauth
  ansible.builtin.include_tasks:
    file: tasks/deploy-tinyauth.yaml

# Node Exporter used to monitor server and docker metrics
- name: homelab-deploy-support-services | Deploy a containerised instance of Node Exporter
  when: false  # Disable for now as not needed with Dozzle
  ansible.builtin.include_tasks:
    file: tasks/deploy-node-exporter.yaml

# Prometheus used to monitor server and docker metrics
- name: homelab-deploy-support-services | Deploy a containerised instance of Prometheus
  when: false  # Disable for now as not needed with Dozzle
  ansible.builtin.include_tasks:
    file: tasks/deploy-prometheus.yaml
