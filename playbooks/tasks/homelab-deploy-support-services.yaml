---

# This playbook deploys support services for the homelab environment and are intended to be run on all Homelab LXC based servers.

# The services include:
# - Portainer Agent
# - Dozzle Agent
# - Docker Socket Proxy
# - Traefik
# - Tinyauth
# - Node Exporter
# - Prometheus

# Load environment variables applicable to the homelab environment
- name: homelab-deploy-support-services | Load homelab vars
  ansible.builtin.include_vars:
    file: vars/homelab_env.yaml

# Ensure docker is installed and configured on the host
- name: homelab-deploy-support-services | Configure Homelab Docker base
  ansible.builtin.include_tasks:
    file: tasks/homelab-configure-docker-base.yaml

# # Define required Docker external networks for the homelab environment
# - name: homelab-deploy-support-services | Set Homelab network facts
#   ansible.builtin.set_fact:
#     docker_socket_proxy_external_network_name: "{{ docker_socket_proxy_external_network_name | default('docker-socket-proxy-external') }}"
#     reverse_proxy_network_name: "{{ web_network_name | default('web') }}"

# # Create required Docker external networks for the homelab environment
# - name: homelab-deploy-support-services | Create Homelab Docker networks  # noqa: syntax-check[unknown-module]
#   community.docker.docker_network:
#     name: "{{ item.name }}"
#   loop:
#     # - name: "{{ docker_monitoring_network_name }}"
#     - name: "{{ web_network_name }}"

# Use the following agents to monitor Docker services via host docker socket

- name: homelab-deploy-support-services | Deploy a containerised instance of Dozzle Agent
  ansible.builtin.include_tasks:
    file: tasks/deploy-dozzle-agent.yaml
  vars:
    dozzle_agent_network_name: "{{ dozzle_network_name }}"

- name: homelab-deploy-support-services | Deploy a containerised instance of Portainer Agent
  ansible.builtin.include_tasks:
    file: tasks/deploy-portainer-agent.yaml

- name: homelab-deploy-support-services | Deploy a containerised exposed instance of Docker Socket Proxy configured for use by Homepage and Uptime Kuma
  ansible.builtin.include_tasks:
    file: tasks/deploy-docker-socket-proxy.yaml
  vars:
    docker_socket_proxy_service_name: "{{ docker_socket_proxy_external_network_name }}"
    docker_socket_proxy_network_name: "{{ docker_socket_proxy_external_network_name }}"
    docker_socket_proxy_network_internal: false
    docker_socket_proxy_env:
      CONTAINERS: "1"

- name: homelab-deploy-support-services | Deploy a containerised exposed instance of Docker Socket Proxy configured to What's Up Docker?
  ansible.builtin.include_tasks:
    file: tasks/deploy-docker-socket-proxy.yaml
  vars:
    docker_socket_proxy_service_name: docker-socket-proxy-wud
    docker_socket_proxy_service_port: "{{ whatsupdocker_docker_socket_proxy_service_port | int }}"
    docker_socket_proxy_network_name: docker-socket-proxy-wud
    docker_socket_proxy_network_internal: false
    docker_socket_proxy_env: "{{ whatsupdocker_docker_socket_proxy_env }}"

# Traefik used as a reverse proxy to manage access to web services with SSL via Let's Encrypt
- name: homelab-deploy-support-services | Deploy a containerised instance of Traefik
  ansible.builtin.include_tasks:
    file: tasks/deploy-traefik.yaml
  vars:
    traefik_network_name: "{{ reverse_proxy_network_name }}"

# Tinyauth used to provide basic authentication for web services
- name: homelab-deploy-support-services | Deploy a containerised instance of Tinyauth
  ansible.builtin.include_tasks:
    file: tasks/deploy-tinyauth.yaml

# Node Exporter used to monitor server and docker metrics
- name: homelab-deploy-support-services | Deploy a containerised instance of Node Exporter
  when: false  # Disable for now as not needed with Dozzle
  ansible.builtin.include_tasks:
    file: tasks/deploy-node-exporter.yaml

# Prometheus used to monitor server and docker metrics
- name: homelab-deploy-support-services | Deploy a containerised instance of Prometheus
  when: false  # Disable for now as not needed with Dozzle
  ansible.builtin.include_tasks:
    file: tasks/deploy-prometheus.yaml
