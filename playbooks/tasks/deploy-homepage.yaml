---
- name: deploy-homepage | Ensure modern version of Docker is available on host
  ansible.builtin.include_tasks:
    file: tasks/hosts-dependency-check-docker-version.yaml

####### HOMEPAGE SECTION

# https://gethomepage.dev/installation/docker/
# https://homepage.com/blog/2020/04/15/loki-quick-tip-how-to-use-a-loki-datasource-in-your-homepage-dashboard/

- name: deploy-homepage | Set Homepage facts
  ansible.builtin.set_fact:
    homepage_image: "{{ homepage_image | default('ghcr.io/gethomepage/homepage:latest') }}"
    homepage_service_name: "{{ homepage_service_name | default('homepage') }}"
    homepage_service_port: "{{ homepage_service_port | default(3000) }}"

- name: deploy-homepage | Set Homepage network facts
  ansible.builtin.set_fact:
    homepage_network_name: "{{ homepage_network_name | default(homepage_service_name) }}"

- name: deploy-homepage | Set Homepage volume facts
  ansible.builtin.set_fact:
    homepage_config_dir: "{{ homepage_config_dir | default('/root/' + homepage_service_name + '/config') }}"

- name: deploy-homepage | Set Homepage aggregated facts
  ansible.builtin.set_fact:
    homepage_fqdn: "{{ homepage_service_name }}.{{ ansible_hostname }}.{{ homelab.certificate_domain | default('localdomain') }}"

- name: deploy-homepage | Set Homepage service facts
  ansible.builtin.set_fact:
    homepage_networks:
      # Docker Socket Proxy External provide access to exposed Docker APIs
      - { name: "{{ docker_socket_proxy_external_network_name | default('docker-socket-proxy-external') }}" }
      # Reverse Proxy  network is used to expose applications via Traefik
      - { name: "{{ reverse_proxy_network_name | default('reverse-proxy') }}" }
    homepage_volumes:
      # Local paths to mount into the container
      # local path:container path
      - "{{ homepage_config_dir }}:/app/config"

- name: deploy-homepage | Log Homepage configuration
  ansible.builtin.debug:
    msg:
      - "Homepage image: {{ homepage_image }}"
      - "Homepage service name: {{ homepage_service_name }}"
      - "Homepage FQDN: {{ homepage_fqdn }}"
      - "Homepage networks: {{ homepage_networks | default(omit) }}"
      - "Homepage ports: {{ homepage_ports | default(omit) }}"
      - "Homepage volumes: {{ homepage_volumes | default(omit) }}"

- name: deploy-homepage | Create Homepage container labels
  ansible.builtin.set_fact:
    homepage_container_labels: "{{ homepage_container_labels | default({}) | combine({item.key: item.value}) }}"
  with_items:
    # # ---------------------------------------------------------------
    # # Homepage labels
    # - { "key": "homepage.group", "value": "Monitoring" }
    # - { "key": "homepage.name", "value": "Homepage" }
    # - { "key": "homepage.description", "value": "This page" }
    # - { "key": "homepage.icon", "value": "homepage.png" }
    # - { "key": "homepage.href", "value": "https://{{ homepage_fqdn }}/" }
    # - { "key": "homepage.siteMonitor", "value": "https://{{ homepage_fqdn }}/" }
    # ---------------------------------------------------------------
    # Traefik labels
    - { "key": "traefik.enable", "value": "true" }
    - {
      "key": "traefik.http.routers.{{ homepage_service_name }}.entrypoints",
      "value": "{{ traefik_entrypoint_secure_name }}",
    }
    - {
      "key": "traefik.http.routers.{{ homepage_service_name }}.rule",
      "value": "Host(`{{ homepage_fqdn }}`)",
    }
    # ---------------------------------------------------------------
    # What's up Docker? labels
    - { "key": "wud.tag.include", "value": '^\d+\.\d+\.\d+$$' }
    - {
      "key": "wud.link.template",
      "value": "https://github.com/gethomepage/homepage/releases/tag/v${major}.${minor}.${patch}",
    }

- name: deploy-homepage | Create Homepage networks
  when: homepage_networks is defined
  community.docker.docker_network:
    name: "{{ item.name }}"
    driver: "{{ item.driver | default('bridge') }}"
    internal: "{{ item.internal | default(false) }}"
    state: present
  loop: "{{ homepage_networks }}"

- name: deploy-homepage | Create Homepage configuration
  when: homepage_config_dir is defined
  block:

    - name: deploy-homepage | Create Homepage configuration directory
      ansible.builtin.file:
        path: "{{ homepage_config_dir }}"
        state: directory
        mode: "0644"

    - name: deploy-homepage | Copy Homepage static configuration
      ansible.builtin.copy:
        src: files/homepage/config/{{ item }}.yaml
        dest: "{{ homepage_config_dir }}/{{ item }}.yaml"
        mode: "0644"
      loop:
        - bookmarks
        - settings

    - name: deploy-homepage | Create Homepage configuration
      ansible.builtin.template:
        src: "templates/homepage/config/{{ item }}.yaml.j2"
        dest: "{{ homepage_config_dir }}/{{ item }}.yaml"
        mode: "0644"
      loop:
        - docker
        - services
        - widgets

- name: deploy-homepage | Pull Homepage image
  community.docker.docker_image:
    name: "{{ homepage_image }}"
    source: pull

- name: deploy-homepage | Deploy Homepage
  community.docker.docker_container:
    name: "{{ homepage_service_name }}"
    image: "{{ homepage_image }}"
    detach: true
    env:
      HOMEPAGE_ALLOWED_HOSTS: "{{ homepage_fqdn }}"
    labels: "{{ homepage_container_labels | default(omit) }}"
    networks_cli_compatible: true
    networks: "{{ homepage_networks | ansible.utils.remove_keys(target=['internal']) | default(omit) }}"
    restart: true
    restart_policy: unless-stopped
    state: started
    volumes: "{{ default_host_volumes + homepage_volumes | default(omit) }}"
  register: homepage_container_state

- name: deploy-homepage | Wait for Homepage to accept connections
  ansible.builtin.wait_for:
    host: "{{ homepage_fqdn }}"
    port: 80
    connect_timeout: 1
    delay: 10
    state: started
    timeout: 30
  register: homepage_running
  retries: 10
  until: homepage_running is success
